{
  "vulnerabilities": {
    "descriptor": {
      "configuration": "",
      "db": {
        "built": "2023-06-29T01:34:06Z",
        "checksum": "sha256:a70a066cbe03743a09df8245fb7613133efb233e1bc3d8aae9f9b4cb6078a70a",
        "error": null,
        "location": "/var/folders/2v/z_0jd7gn30qcym54rz_z2__m0000gq/T/veracode_cli_cache/5",
        "schemaVersion": 5
      },
      "name": "grype",
      "version": "[not provided]"
    },
    "distro": {
      "idLike": null,
      "name": "",
      "version": ""
    },
    "matches": [],
    "source": {
      "target": "./insecure-test/iac/terraform",
      "type": "directory"
    }
  },
  "secrets": {
    "ArtifactName": "insecure-test/iac/terraform",
    "ArtifactType": "filesystem",
    "Metadata": {
      "ImageConfig": {
        "architecture": "",
        "config": {},
        "created": "0001-01-01T00:00:00Z",
        "os": "",
        "rootfs": {
          "diff_ids": null,
          "type": ""
        }
      }
    },
    "Results": [
      {
        "Class": "secret",
        "Secrets": [
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "sudo systemctl start apache2",
                  "FirstCause": false,
                  "Highlighted": "sudo systemctl start apache2",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 13,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "sudo systemctl enable apache2",
                  "FirstCause": false,
                  "Highlighted": "sudo systemctl enable apache2",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 14,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "export AWS_ACCESS_KEY_ID=********************",
                  "FirstCause": true,
                  "Highlighted": "export AWS_ACCESS_KEY_ID=********************",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 15,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "export AWS_SECRET_ACCESS_KEY=****************************************",
                  "FirstCause": false,
                  "Highlighted": "export AWS_SECRET_ACCESS_KEY=****************************************",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 16,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 15,
            "Layer": {},
            "Match": "export AWS_ACCESS_KEY_ID=********************",
            "RuleID": "aws-access-key-id",
            "Severity": "CRITICAL",
            "StartLine": 15,
            "Title": "AWS Access Key ID"
          },
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "sudo systemctl enable apache2",
                  "FirstCause": false,
                  "Highlighted": "sudo systemctl enable apache2",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 14,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "export AWS_ACCESS_KEY_ID=********************",
                  "FirstCause": false,
                  "Highlighted": "export AWS_ACCESS_KEY_ID=********************",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 15,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "export AWS_SECRET_ACCESS_KEY=****************************************",
                  "FirstCause": true,
                  "Highlighted": "export AWS_SECRET_ACCESS_KEY=****************************************",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 16,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "export AWS_DEFAULT_REGION=us-west-2",
                  "FirstCause": false,
                  "Highlighted": "export AWS_DEFAULT_REGION=us-west-2",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 17,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 16,
            "Layer": {},
            "Match": "export AWS_SECRET_ACCESS_KEY=****************************************",
            "RuleID": "aws-secret-access-key",
            "Severity": "CRITICAL",
            "StartLine": 16,
            "Title": "AWS Secret Access Key"
          }
        ],
        "Target": "aws/ec2.tf"
      },
      {
        "Class": "secret",
        "Secrets": [
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "  environment {",
                  "FirstCause": false,
                  "Highlighted": "  environment {",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 43,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "    variables = {",
                  "FirstCause": false,
                  "Highlighted": "    variables = {",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 44,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "      access_key = \"********************\"",
                  "FirstCause": true,
                  "Highlighted": "      access_key = \"********************\"",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 45,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "      secret_key = \"****************************************\"",
                  "FirstCause": false,
                  "Highlighted": "      secret_key = \"****************************************\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 46,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 45,
            "Layer": {},
            "Match": "      access_key = \"********************\"",
            "RuleID": "aws-access-key-id",
            "Severity": "CRITICAL",
            "StartLine": 45,
            "Title": "AWS Access Key ID"
          },
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "    variables = {",
                  "FirstCause": false,
                  "Highlighted": "    variables = {",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 44,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "      access_key = \"********************\"",
                  "FirstCause": false,
                  "Highlighted": "      access_key = \"********************\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 45,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "      secret_key = \"****************************************\"",
                  "FirstCause": true,
                  "Highlighted": "      secret_key = \"****************************************\"",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 46,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "    }",
                  "FirstCause": false,
                  "Highlighted": "    }",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 47,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 46,
            "Layer": {},
            "Match": "      secret_key = \"****************************************\"",
            "RuleID": "aws-secret-access-key",
            "Severity": "CRITICAL",
            "StartLine": 46,
            "Title": "AWS Secret Access Key"
          }
        ],
        "Target": "aws/lambda.tf"
      },
      {
        "Class": "secret",
        "Secrets": [
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "  alias      = \"plain_text_access_keys_provider\"",
                  "FirstCause": false,
                  "Highlighted": "  alias      = \"plain_text_access_keys_provider\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 8,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "  region     = \"us-west-1\"",
                  "FirstCause": false,
                  "Highlighted": "  region     = \"us-west-1\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 9,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "  access_key = \"********************\"",
                  "FirstCause": true,
                  "Highlighted": "  access_key = \"********************\"",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 10,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "  secret_key = \"****************************************\"",
                  "FirstCause": false,
                  "Highlighted": "  secret_key = \"****************************************\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 11,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 10,
            "Layer": {},
            "Match": "  access_key = \"********************\"",
            "RuleID": "aws-access-key-id",
            "Severity": "CRITICAL",
            "StartLine": 10,
            "Title": "AWS Access Key ID"
          },
          {
            "Category": "AWS",
            "Code": {
              "Lines": [
                {
                  "Annotation": "",
                  "Content": "  region     = \"us-west-1\"",
                  "FirstCause": false,
                  "Highlighted": "  region     = \"us-west-1\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 9,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "  access_key = \"********************\"",
                  "FirstCause": false,
                  "Highlighted": "  access_key = \"********************\"",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 10,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "  secret_key = \"****************************************\"",
                  "FirstCause": true,
                  "Highlighted": "  secret_key = \"****************************************\"",
                  "IsCause": true,
                  "LastCause": true,
                  "Number": 11,
                  "Truncated": false
                },
                {
                  "Annotation": "",
                  "Content": "}",
                  "FirstCause": false,
                  "Highlighted": "}",
                  "IsCause": false,
                  "LastCause": false,
                  "Number": 12,
                  "Truncated": false
                }
              ]
            },
            "EndLine": 11,
            "Layer": {},
            "Match": "  secret_key = \"****************************************\"",
            "RuleID": "aws-secret-access-key",
            "Severity": "CRITICAL",
            "StartLine": 11,
            "Title": "AWS Secret Access Key"
          }
        ],
        "Target": "aws/providers.tf"
      }
    ],
    "SchemaVersion": 2
  },
  "configs": {
    "ArtifactName": "insecure-test/iac/terraform",
    "ArtifactType": "filesystem",
    "Metadata": {
      "ImageConfig": {
        "architecture": "",
        "config": {},
        "created": "0001-01-01T00:00:00Z",
        "os": "",
        "rootfs": {
          "diff_ids": null,
          "type": ""
        }
      }
    },
    "Results": [
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 0,
          "Successes": 2
        },
        "Target": "alicloud",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 16,
          "Successes": 2
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"db_app\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 243,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # ec2 have plain text secrets in user data",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 244,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ami                  = data.aws_ami.amazon-linux-2.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 245,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  instance_type        = \"t2.nano\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 246,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 247,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 248,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 249,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  \"${aws_security_group.web-node.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 250,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  subnet_id = \"${aws_subnet.web_subnet.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 251,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 252,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 413,
              "Provider": "AWS",
              "Resource": "aws_instance.db_app",
              "Service": "ec2",
              "StartLine": 243
            },
            "Description": "\nIMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\nBy default \u003ccode\u003eaws_instance\u003c/code\u003e resource sets IMDS session auth tokens to be optional. \nTo fully protect IMDS you need to enable session tokens by using \u003ccode\u003emetadata_options\u003c/code\u003e block and its \u003ccode\u003ehttp_tokens\u003c/code\u003e variable set to \u003ccode\u003erequired\u003c/code\u003e.\n",
            "ID": "AVD-AWS-0028",
            "Layer": {},
            "Message": "Instance does not require IMDS access to require a token",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0028",
            "Query": "data..",
            "References": [
              "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service",
              "https://avd.aquasec.com/misconfig/avd-aws-0028"
            ],
            "Resolution": "Enable HTTP token requirement for IMDS",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "aws_instance should activate session tokens for Instance Metadata Service.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_role_policy\" \"ec2policy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 206,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 207,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"rds:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 218,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 219,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 226,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 219,
              "Provider": "AWS",
              "Resource": "aws_iam_role_policy.ec2policy",
              "Service": "iam",
              "StartLine": 215
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 's3:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_role_policy\" \"ec2policy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 206,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 207,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"rds:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 218,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 219,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 226,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 219,
              "Provider": "AWS",
              "Resource": "aws_iam_role_policy.ec2policy",
              "Service": "iam",
              "StartLine": 215
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 's3:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_role_policy\" \"ec2policy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 206,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 207,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"rds:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 218,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 219,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 226,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 219,
              "Provider": "AWS",
              "Resource": "aws_iam_role_policy.ec2policy",
              "Service": "iam",
              "StartLine": 215
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 's3:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_role_policy\" \"ec2policy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 206,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 207,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Resource\": \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 221,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 226,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 221,
              "Provider": "AWS",
              "Resource": "aws_iam_role_policy.ec2policy",
              "Service": "iam",
              "StartLine": 221
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses sensitive action 's3:*' on wildcarded resource '*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0077",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "0",
                    "Content": "  backup_retention_period = 0",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 18,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 18,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 18
            },
            "Description": "RDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.",
            "ID": "AVD-AWS-0077",
            "Layer": {},
            "Message": "Instance has very low backup retention period.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0077",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention",
              "https://avd.aquasec.com/misconfig/avd-aws-0077"
            ],
            "Resolution": "Explicitly set the retention period to greater than the default",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0080",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  storage_encrypted       = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 19
            },
            "Description": "Encryption should be enabled for an RDS Database instances. \n\nWhen enabling encryption by setting the kms_key_id.",
            "ID": "AVD-AWS-0080",
            "Layer": {},
            "Message": "Instance does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0080",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0080"
            ],
            "Resolution": "Enable encryption for RDS instances",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "RDS encryption has not been enabled at a DB Instance level.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0082",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  publicly_accessible     = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 22
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AWS-0082",
            "Layer": {},
            "Message": "Instance is exposed publicly.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0082",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Hiding",
              "https://avd.aquasec.com/misconfig/avd-aws-0082"
            ],
            "Resolution": "Set the database to not be publicly accessible",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "A database resource is marked as publicly accessible.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0099",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name   = \"${local.resource_prefix.value}-rds-sg\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_id = aws_vpc.web_vpc.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-rds-sg\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 134,
              "Provider": "AWS",
              "Resource": "aws_security_group.default",
              "Service": "ec2",
              "StartLine": 117
            },
            "Description": "Security groups should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0099",
            "Layer": {},
            "Message": "Security group explicitly uses the default description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0099",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0099"
            ],
            "Resolution": "Add descriptions for all security groups",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0104",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group_rule\" \"egress\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 145,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  type              = \"egress\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 146,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  from_port         = 0",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 147,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  to_port           = 0",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 148,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  protocol          = \"-1\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 149,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_blocks       = [\"0.0.0.0/0\"]",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 150,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  security_group_id = \"${aws_security_group.default.id}\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 151,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 152,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 150,
              "Provider": "AWS",
              "Resource": "aws_security_group_rule.egress",
              "Service": "ec2",
              "StartLine": 150
            },
            "Description": "Opening up ports to connect out to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that are explicitly required where possible.",
            "ID": "AVD-AWS-0104",
            "Layer": {},
            "Message": "Security group rule allows egress to multiple public internet addresses.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0104",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/centralized-egress-to-internet.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0104"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An egress security group rule allows traffic to /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0124",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group_rule\" \"ingress\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  type              = \"ingress\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  from_port         = \"3306\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  to_port           = \"3306\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  protocol          = \"tcp\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_blocks       = [\"${aws_vpc.web_vpc.cidr_block}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  security_group_id = aws_security_group.default.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 142,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 143,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 143,
              "Provider": "AWS",
              "Resource": "aws_security_group_rule.ingress",
              "Service": "ec2",
              "StartLine": 136
            },
            "Description": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0124",
            "Layer": {},
            "Message": "Security group rule does not have a description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0124",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0124"
            ],
            "Resolution": "Add descriptions for all security groups rules",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group rule.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0124",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group_rule\" \"egress\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 145,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  type              = \"egress\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 146,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  from_port         = 0",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 147,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  to_port           = 0",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 148,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  protocol          = \"-1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 149,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_blocks       = [\"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 150,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  security_group_id = \"${aws_security_group.default.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 151,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 152,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 152,
              "Provider": "AWS",
              "Resource": "aws_security_group_rule.egress",
              "Service": "ec2",
              "StartLine": 145
            },
            "Description": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0124",
            "Layer": {},
            "Message": "Security group rule does not have a description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0124",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0124"
            ],
            "Resolution": "Add descriptions for all security groups rules",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group rule.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0131",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"db_app\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 243,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # ec2 have plain text secrets in user data",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 244,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ami                  = data.aws_ami.amazon-linux-2.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 245,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  instance_type        = \"t2.nano\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 246,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  iam_instance_profile = aws_iam_instance_profile.ec2profile.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 247,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 248,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 249,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  \"${aws_security_group.web-node.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 250,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  subnet_id = \"${aws_subnet.web_subnet.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 251,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 252,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 413,
              "Provider": "AWS",
              "Resource": "aws_instance.db_app",
              "Service": "ec2",
              "StartLine": 243
            },
            "Description": "Block devices should be encrypted to ensure sensitive data is held securely at rest.",
            "ID": "AVD-AWS-0131",
            "Layer": {},
            "Message": "Root block device is not encrypted.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0131",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0131"
            ],
            "Resolution": "Turn on encryption for all block devices",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instance with unencrypted block device.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0133",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                   = var.dbname",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  engine                 = \"mysql\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  option_group_name      = aws_db_option_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  parameter_group_name   = aws_db_parameter_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  db_subnet_group_name   = aws_db_subnet_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 42,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 1
            },
            "Description": "Enabling Performance insights allows for greater depth in monitoring data.\n\t\t\nFor example, information about active sessions could help diagose a compromise or assist in the investigation",
            "ID": "AVD-AWS-0133",
            "Layer": {},
            "Message": "Instance does not have performance insights enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0133",
            "Query": "data..",
            "References": [
              "https://aws.amazon.com/rds/performance-insights/",
              "https://avd.aquasec.com/misconfig/avd-aws-0133"
            ],
            "Resolution": "Enable performance insights",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Enable Performance Insights to detect potential problems",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0176",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                   = var.dbname",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  engine                 = \"mysql\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  option_group_name      = aws_db_option_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  parameter_group_name   = aws_db_parameter_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  db_subnet_group_name   = aws_db_subnet_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 42,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 1
            },
            "Description": "Ensure IAM Database Authentication is enabled for RDS database instances to manage database access",
            "ID": "N/A",
            "Layer": {},
            "Message": "Instance does not have IAM Authentication enabled",
            "Namespace": "builtin.aws.rds.aws0176",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0176.deny",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/iam-auth.html",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "RDS IAM Database Authentication Disabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0177",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_db_instance\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                   = var.dbname",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  engine                 = \"mysql\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  option_group_name      = aws_db_option_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  parameter_group_name   = aws_db_parameter_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  db_subnet_group_name   = aws_db_subnet_group.default.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [\"${aws_security_group.default.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 42,
              "Provider": "AWS",
              "Resource": "aws_db_instance.default",
              "Service": "rds",
              "StartLine": 1
            },
            "Description": "Ensure deletion protection is enabled for RDS database instances.",
            "ID": "N/A",
            "Layer": {},
            "Message": "Instance does not have Deletion Protection enabled",
            "Namespace": "builtin.aws.rds.aws0177",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/n/a",
            "Query": "data.builtin.aws.rds.aws0177.deny",
            "References": [
              "https://aws.amazon.com/about-aws/whats-new/2018/09/amazon-rds-now-provides-database-deletion-protection/",
              "https://avd.aquasec.com/misconfig/n/a"
            ],
            "Resolution": "Modify the RDS instances to enable deletion protection.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "RDS Deletion Protection Disabled",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/db-app.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 23,
          "Successes": 2
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # unencrypted volume",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  availability_zone = \"${var.region}a\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  #encrypted         = false  # Setting this causes the volume to be recreated on apply ",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  size = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-ebs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d3439f0f2af62f6fa3521e14d6c27819ef8f12e1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 51,
              "Provider": "AWS",
              "Resource": "aws_ebs_volume.web_host_storage",
              "Service": "ec2",
              "StartLine": 34
            },
            "Description": "By enabling encryption on EBS volumes you protect the volume, the disk I/O and any derived snapshots from compromise if intercepted.",
            "ID": "AVD-AWS-0026",
            "Layer": {},
            "Message": "EBS volume is not encrypted.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0026",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0026"
            ],
            "Resolution": "Enable encryption of EBS volumes",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "EBS volumes must be encrypted",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_ebs_volume\" \"web_host_storage\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # unencrypted volume",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  availability_zone = \"${var.region}a\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  #encrypted         = false  # Setting this causes the volume to be recreated on apply ",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  size = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-ebs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d3439f0f2af62f6fa3521e14d6c27819ef8f12e1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 51,
              "Provider": "AWS",
              "Resource": "aws_ebs_volume.web_host_storage",
              "Service": "ec2",
              "StartLine": 34
            },
            "Description": "Encryption using AWS keys provides protection for your EBS volume. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0027",
            "Layer": {},
            "Message": "EBS volume does not use a customer-managed KMS key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0027",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0027"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "EBS volume encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"web_host\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # ec2 have plain text secrets in user data",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ami           = \"${var.ami}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  instance_type = \"t2.nano\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  \"${aws_security_group.web-node.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  subnet_id = \"${aws_subnet.web_subnet.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  user_data = \u003c\u003cEOF",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 32,
              "Provider": "AWS",
              "Resource": "aws_instance.web_host",
              "Service": "ec2",
              "StartLine": 1
            },
            "Description": "\nIMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\nBy default \u003ccode\u003eaws_instance\u003c/code\u003e resource sets IMDS session auth tokens to be optional. \nTo fully protect IMDS you need to enable session tokens by using \u003ccode\u003emetadata_options\u003c/code\u003e block and its \u003ccode\u003ehttp_tokens\u003c/code\u003e variable set to \u003ccode\u003erequired\u003c/code\u003e.\n",
            "ID": "AVD-AWS-0028",
            "Layer": {},
            "Message": "Instance does not require IMDS access to require a token",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0028",
            "Query": "data..",
            "References": [
              "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service",
              "https://avd.aquasec.com/misconfig/avd-aws-0028"
            ],
            "Resolution": "Enable HTTP token requirement for IMDS",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "aws_instance should activate session tokens for Instance Metadata Service.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0029",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"web_host\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"#! /bin/bash\\nsudo apt-get update\\nsudo apt-get install -y apache2\\nsudo systemctl start apache2\\nsudo systemctl enable apache2\\nexport AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\\nexport AWS_SECRET_ACCESS_KEY=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\\nexport AWS_DEFAULT_REGION=us-west-2\\necho \\\"\u003ch1\u003eDeployed via Terraform\u003c/h1\u003e\\\" | sudo tee /var/www/html/index.html\\n\"",
                    "Content": "  user_data = \u003c\u003cEOF",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "#! /bin/bash",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "sudo apt-get update",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "sudo apt-get install -y apache2",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "sudo systemctl start apache2",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "sudo systemctl enable apache2",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "AWS",
              "Resource": "aws_instance.web_host",
              "Service": "ec2",
              "StartLine": 9
            },
            "Description": "EC2 instance data is used to pass start up information into the EC2 instance. This userdata must not contain access key credentials. Instead use an IAM Instance Profile assigned to the instance to grant access to other AWS Services.",
            "ID": "AVD-AWS-0029",
            "Layer": {},
            "Message": "Sensitive data found in instance user data: Check for AWS Access Key Id",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0029",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0029"
            ],
            "Resolution": "Remove sensitive data from the EC2 instance user-data",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "User data for EC2 instances must not contain sensitive AWS keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket does not have encryption enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0089",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "Buckets should have logging enabled so that access can be audited.",
            "ID": "AVD-AWS-0089",
            "Layer": {},
            "Message": "Bucket does not have logging enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0089",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0089"
            ],
            "Resolution": "Add a logging block to the resource to enable access logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Bucket does not have logging enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0090",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n",
            "ID": "AVD-AWS-0090",
            "Layer": {},
            "Message": "Bucket does not have versioning enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0090",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0090"
            ],
            "Resolution": "Enable versioning to protect against accidental/malicious removal or modification",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Data should be versioned",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0104",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 102,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 101
            },
            "Description": "Opening up ports to connect out to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that are explicitly required where possible.",
            "ID": "AVD-AWS-0104",
            "Layer": {},
            "Message": "Security group rule allows egress to multiple public internet addresses.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0104",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/centralized-egress-to-internet.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0104"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An egress security group rule allows traffic to /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0107",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 87,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 88,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 88,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 87
            },
            "Description": "Opening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.",
            "ID": "AVD-AWS-0107",
            "Layer": {},
            "Message": "Security group rule allows ingress from public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0107",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0107"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An ingress security group rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0107",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 95,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 94
            },
            "Description": "Opening up ports to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that explicitly require it where possible.",
            "ID": "AVD-AWS-0107",
            "Layer": {},
            "Message": "Security group rule allows ingress from public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0107",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0107"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An ingress security group rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0124",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  ingress {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    from_port = 80",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    to_port   = 80",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    protocol  = \"tcp\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 87,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 88,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 89,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 83
            },
            "Description": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0124",
            "Layer": {},
            "Message": "Security group rule does not have a description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0124",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0124"
            ],
            "Resolution": "Add descriptions for all security groups rules",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group rule.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0124",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  ingress {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    from_port = 22",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    to_port   = 22",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    protocol  = \"tcp\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 96,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 90
            },
            "Description": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0124",
            "Layer": {},
            "Message": "Security group rule does not have a description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0124",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0124"
            ],
            "Resolution": "Add descriptions for all security groups rules",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group rule.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0124",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_security_group\" \"web-node\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  egress {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    from_port = 0",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    to_port   = 0",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    protocol  = \"-1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    cidr_blocks = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"0.0.0.0/0\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 103,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 103,
              "Provider": "AWS",
              "Resource": "aws_security_group.web-node",
              "Service": "ec2",
              "StartLine": 97
            },
            "Description": "Security group rules should include a description for auditing purposes.\n\nSimplifies auditing, debugging, and managing security groups.",
            "ID": "AVD-AWS-0124",
            "Layer": {},
            "Message": "Security group rule does not have a description.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0124",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0124"
            ],
            "Resolution": "Add descriptions for all security groups rules",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Missing description for security group rule.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0131",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_instance\" \"web_host\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # ec2 have plain text secrets in user data",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ami           = \"${var.ami}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  instance_type = \"t2.nano\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_security_group_ids = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  \"${aws_security_group.web-node.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  subnet_id = \"${aws_subnet.web_subnet.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  user_data = \u003c\u003cEOF",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 32,
              "Provider": "AWS",
              "Resource": "aws_instance.web_host",
              "Service": "ec2",
              "StartLine": 1
            },
            "Description": "Block devices should be encrypted to ensure sensitive data is held securely at rest.",
            "ID": "AVD-AWS-0131",
            "Layer": {},
            "Message": "Root block device is not encrypted.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0131",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0131"
            ],
            "Resolution": "Turn on encryption for all block devices",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instance with unencrypted block device.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0132",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"flowbucket\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 271,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 272,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 273,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 274,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 275,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-flowlogs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 276,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 277,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 278,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 279,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 280,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 288,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.flowbucket",
              "Service": "s3",
              "StartLine": 271
            },
            "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0132",
            "Layer": {},
            "Message": "Bucket does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0132"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0164",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_subnet\" \"web_subnet\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  map_public_ip_on_launch = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 152,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 153,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 139,
              "Provider": "AWS",
              "Resource": "aws_subnet.web_subnet",
              "Service": "ec2",
              "StartLine": 139
            },
            "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
            "ID": "AVD-AWS-0164",
            "Layer": {},
            "Message": "Subnet associates public IP address.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0164",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
              "https://avd.aquasec.com/misconfig/avd-aws-0164"
            ],
            "Resolution": "Set the instance to not be publicly accessible",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances in a subnet should not receive a public IP address by default.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0164",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_subnet\" \"web_subnet2\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 155,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 156,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  map_public_ip_on_launch = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 159,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 172,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 173,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 159,
              "Provider": "AWS",
              "Resource": "aws_subnet.web_subnet2",
              "Service": "ec2",
              "StartLine": 159
            },
            "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
            "ID": "AVD-AWS-0164",
            "Layer": {},
            "Message": "Subnet associates public IP address.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0164",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
              "https://avd.aquasec.com/misconfig/avd-aws-0164"
            ],
            "Resolution": "Set the instance to not be publicly accessible",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances in a subnet should not receive a public IP address by default.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0178",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_vpc\" \"web_vpc\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_block           = \"172.16.0.0/16\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_dns_hostnames = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_dns_support   = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-vpc\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/ec2.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 133,
              "Provider": "AWS",
              "Resource": "aws_vpc.web_vpc",
              "Service": "ec2",
              "StartLine": 117
            },
            "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.",
            "ID": "AVD-AWS-0178",
            "Layer": {},
            "Message": "VPC Flow Logs is not enabled for VPC",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0178",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0178"
            ],
            "Resolution": "Enable flow logs for VPC",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/ec2.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 3,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0030",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_ecr_repository \"repository\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                 = \"${local.resource_prefix.value}-repository\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  image_tag_mutability = \"MUTABLE\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-repository\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"e6d83b21346fe85d4fe28b16c0b2f1e0662eb1d7\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 18,
              "Provider": "AWS",
              "Resource": "aws_ecr_repository.repository",
              "Service": "ecr",
              "StartLine": 1
            },
            "Description": "Repository image scans should be enabled to ensure vulnerable software can be discovered and remediated as soon as possible.",
            "ID": "AVD-AWS-0030",
            "Layer": {},
            "Message": "Image scanning is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0030",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0030"
            ],
            "Resolution": "Enable ECR image scanning",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "ECR repository has image scans disabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0031",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_ecr_repository \"repository\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  image_tag_mutability = \"MUTABLE\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 3,
              "Provider": "AWS",
              "Resource": "aws_ecr_repository.repository",
              "Service": "ecr",
              "StartLine": 3
            },
            "Description": "ECR images should be set to IMMUTABLE to prevent code injection through image mutation.\n\nThis can be done by setting \u003ccode\u003eimage_tab_mutability\u003c/code\u003e to \u003ccode\u003eIMMUTABLE\u003c/code\u003e",
            "ID": "AVD-AWS-0031",
            "Layer": {},
            "Message": "Repository tags are mutable.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0031",
            "Query": "data..",
            "References": [
              "https://sysdig.com/blog/toctou-tag-mutability/",
              "https://avd.aquasec.com/misconfig/avd-aws-0031"
            ],
            "Resolution": "Only use immutable images in ECR",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "ECR images tags shouldn't be mutable.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0033",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_ecr_repository \"repository\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                 = \"${local.resource_prefix.value}-repository\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  image_tag_mutability = \"MUTABLE\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-repository\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"e6d83b21346fe85d4fe28b16c0b2f1e0662eb1d7\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 18,
              "Provider": "AWS",
              "Resource": "aws_ecr_repository.repository",
              "Service": "ecr",
              "StartLine": 1
            },
            "Description": "Images in the ECR repository are encrypted by default using AWS managed encryption keys. To increase control of the encryption and control the management of factors like key rotation, use a Customer Managed Key.",
            "ID": "AVD-AWS-0033",
            "Layer": {},
            "Message": "Repository is not encrypted using KMS.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0033",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0033"
            ],
            "Resolution": "Use customer managed keys",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "ECR Repository should use customer managed keys to allow more control",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/ecr.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 11,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 126,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 127,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 118
            },
            "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.",
            "ID": "AVD-AWS-0038",
            "Layer": {},
            "Message": "Control plane API logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0038"
            ],
            "Resolution": "Enable logging for the EKS control plane",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "EKS Clusters should have cluster control plane logging turned on",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 126,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 127,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 118
            },
            "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.",
            "ID": "AVD-AWS-0038",
            "Layer": {},
            "Message": "Control plane audit logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0038"
            ],
            "Resolution": "Enable logging for the EKS control plane",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "EKS Clusters should have cluster control plane logging turned on",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 126,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 127,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 118
            },
            "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.",
            "ID": "AVD-AWS-0038",
            "Layer": {},
            "Message": "Control plane authenticator logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0038"
            ],
            "Resolution": "Enable logging for the EKS control plane",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "EKS Clusters should have cluster control plane logging turned on",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 126,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 127,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 118
            },
            "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.",
            "ID": "AVD-AWS-0038",
            "Layer": {},
            "Message": "Control plane controller manager logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0038"
            ],
            "Resolution": "Enable logging for the EKS control plane",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "EKS Clusters should have cluster control plane logging turned on",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 126,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 127,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 118
            },
            "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.",
            "ID": "AVD-AWS-0038",
            "Layer": {},
            "Message": "Control plane scheduler logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0038"
            ],
            "Resolution": "Enable logging for the EKS control plane",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "EKS Clusters should have cluster control plane logging turned on",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0039",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name     = local.eks_name.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role_arn = \"${aws_iam_role.iam_for_eks.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 126,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 127,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 118
            },
            "Description": "EKS cluster resources should have the encryption_config block set with protection of the secrets resource.",
            "ID": "AVD-AWS-0039",
            "Layer": {},
            "Message": "Cluster does not have secret encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0039",
            "Query": "data..",
            "References": [
              "https://aws.amazon.com/about-aws/whats-new/2020/03/amazon-eks-adds-envelope-encryption-for-secrets-with-aws-kms/",
              "https://avd.aquasec.com/misconfig/avd-aws-0039"
            ],
            "Resolution": "Enable encryption of EKS secrets",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "EKS should have the encryption of secrets enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0040",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 125,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 122
            },
            "Description": "EKS clusters are available publicly by default, this should be explicitly disabled in the vpc_config of the EKS cluster resource.",
            "ID": "AVD-AWS-0040",
            "Layer": {},
            "Message": "Public cluster access is enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0040",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0040"
            ],
            "Resolution": "Don't enable public access to EKS Clusters",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "EKS Clusters should have the public access disabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0041",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_eks_cluster \"eks_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  vpc_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    endpoint_private_access = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    subnet_ids              = [\"${aws_subnet.eks_subnet1.id}\", \"${aws_subnet.eks_subnet2.id}\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 125,
              "Provider": "AWS",
              "Resource": "aws_eks_cluster.eks_cluster",
              "Service": "eks",
              "StartLine": 122
            },
            "Description": "EKS Clusters have public access cidrs set to 0.0.0.0/0 by default which is wide open to the internet. This should be explicitly set to a more specific private CIDR range",
            "ID": "AVD-AWS-0041",
            "Layer": {},
            "Message": "Cluster allows access from a public CIDR: 0.0.0.0/0.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0041",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/eks/latest/userguide/create-public-private-vpc.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0041"
            ],
            "Resolution": "Don't enable public access to EKS Clusters",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "EKS cluster should not have open CIDR range for public access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0164",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_subnet \"eks_subnet1\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  map_public_ip_on_launch = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 87,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 88,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 66,
              "Provider": "AWS",
              "Resource": "aws_subnet.eks_subnet1",
              "Service": "ec2",
              "StartLine": 66
            },
            "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
            "ID": "AVD-AWS-0164",
            "Layer": {},
            "Message": "Subnet associates public IP address.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0164",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
              "https://avd.aquasec.com/misconfig/avd-aws-0164"
            ],
            "Resolution": "Set the instance to not be publicly accessible",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances in a subnet should not receive a public IP address by default.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0164",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_subnet \"eks_subnet2\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  map_public_ip_on_launch = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 94,
              "Provider": "AWS",
              "Resource": "aws_subnet.eks_subnet2",
              "Service": "ec2",
              "StartLine": 94
            },
            "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
            "ID": "AVD-AWS-0164",
            "Layer": {},
            "Message": "Subnet associates public IP address.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0164",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
              "https://avd.aquasec.com/misconfig/avd-aws-0164"
            ],
            "Resolution": "Set the instance to not be publicly accessible",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances in a subnet should not receive a public IP address by default.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0178",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource aws_vpc \"eks_vpc\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cidr_block           = \"10.10.0.0/16\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_dns_hostnames = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_dns_support   = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name = \"${local.resource_prefix.value}-eks-vpc\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/eks.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 52,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 53,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 60,
              "Provider": "AWS",
              "Resource": "aws_vpc.eks_vpc",
              "Service": "ec2",
              "StartLine": 44
            },
            "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.",
            "ID": "AVD-AWS-0178",
            "Layer": {},
            "Message": "VPC Flow Logs is not enabled for VPC",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0178",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0178"
            ],
            "Resolution": "Enable flow logs for VPC",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/eks.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 1,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0053",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elb\" \"weblb\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name = \"weblb-terraform-elb\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  listener {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_port     = 8000",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_protocol = \"http\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    lb_port           = 80",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    lb_protocol       = \"http\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 40,
              "Provider": "AWS",
              "Resource": "aws_elb.weblb",
              "Service": "elb",
              "StartLine": 2
            },
            "Description": "There are many scenarios in which you would want to expose a load balancer to the wider internet, but this check exists as a warning to prevent accidental exposure of internal assets. You should ensure that this resource should be exposed publicly.",
            "ID": "AVD-AWS-0053",
            "Layer": {},
            "Message": "Load balancer is exposed publicly.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0053",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-aws-0053"
            ],
            "Resolution": "Switch to an internal load balancer or add a tfsec ignore",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Load balancer is exposed to the internet.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/elb.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 5,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0042",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  domain_name           = \"tg-${var.environment}-es\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  elasticsearch_version = \"2.3\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_type            = \"t2.small.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_count           = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_type    = \"m4.large.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 28,
              "Provider": "AWS",
              "Resource": "aws_elasticsearch_domain.monitoring-framework",
              "Service": "elastic-search",
              "StartLine": 1
            },
            "Description": "Amazon ES exposes four Elasticsearch logs through Amazon CloudWatch Logs: error logs, search slow logs, index slow logs, and audit logs. \n\nSearch slow logs, index slow logs, and error logs are useful for troubleshooting performance and stability issues. \n\nAudit logs track user activity for compliance purposes. \n\nAll the logs are disabled by default.",
            "ID": "AVD-AWS-0042",
            "Layer": {},
            "Message": "Domain audit logging is not enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0042",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0042"
            ],
            "Resolution": "Enable logging for ElasticSearch domains",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Domain logging should be enabled for Elastic Search domains",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0043",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  domain_name           = \"tg-${var.environment}-es\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  elasticsearch_version = \"2.3\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_type            = \"t2.small.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_count           = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_type    = \"m4.large.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 28,
              "Provider": "AWS",
              "Resource": "aws_elasticsearch_domain.monitoring-framework",
              "Service": "elastic-search",
              "StartLine": 1
            },
            "Description": "Traffic flowing between Elasticsearch nodes should be encrypted to ensure sensitive data is kept private.",
            "ID": "AVD-AWS-0043",
            "Layer": {},
            "Message": "Domain does not have in-transit encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0043",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0043"
            ],
            "Resolution": "Enable encrypted node to node communication",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Elasticsearch domain uses plaintext traffic for node to node communication.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0046",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  domain_name           = \"tg-${var.environment}-es\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  elasticsearch_version = \"2.3\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_type            = \"t2.small.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_count           = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_type    = \"m4.large.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 28,
              "Provider": "AWS",
              "Resource": "aws_elasticsearch_domain.monitoring-framework",
              "Service": "elastic-search",
              "StartLine": 1
            },
            "Description": "Plain HTTP is unencrypted and human-readable. This means that if a malicious actor was to eavesdrop on your connection, they would be able to see all of your data flowing back and forth.\n\nYou should use HTTPS, which is HTTP over an encrypted (TLS) connection, meaning eavesdroppers cannot read your traffic.",
            "ID": "AVD-AWS-0046",
            "Layer": {},
            "Message": "Domain does not enforce HTTPS.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0046",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0046"
            ],
            "Resolution": "Enforce the use of HTTPS for ElasticSearch",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "Elasticsearch doesn't enforce HTTPS traffic.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0048",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  domain_name           = \"tg-${var.environment}-es\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  elasticsearch_version = \"2.3\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_type            = \"t2.small.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_count           = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_type    = \"m4.large.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 28,
              "Provider": "AWS",
              "Resource": "aws_elasticsearch_domain.monitoring-framework",
              "Service": "elastic-search",
              "StartLine": 1
            },
            "Description": "You should ensure your Elasticsearch data is encrypted at rest to help prevent sensitive information from being read by unauthorised users.",
            "ID": "AVD-AWS-0048",
            "Layer": {},
            "Message": "Domain does not have at-rest encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0048",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0048"
            ],
            "Resolution": "Enable ElasticSearch domain encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Elasticsearch domain isn't encrypted at rest.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0126",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_elasticsearch_domain\" \"monitoring-framework\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  domain_name           = \"tg-${var.environment}-es\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  elasticsearch_version = \"2.3\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_type            = \"t2.small.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    instance_count           = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    dedicated_master_type    = \"m4.large.elasticsearch\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 28,
              "Provider": "AWS",
              "Resource": "aws_elasticsearch_domain.monitoring-framework",
              "Service": "elastic-search",
              "StartLine": 1
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AWS-0126",
            "Layer": {},
            "Message": "Domain does not have a secure TLS policy.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0126",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0126"
            ],
            "Resolution": "Use the most modern TLS/SSL policies available",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Elasticsearch domain endpoint is using outdated TLS policy.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/es.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 6,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user_policy\" \"userpolicy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"lambda:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"cloudwatch:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 39,
              "Provider": "AWS",
              "Resource": "aws_iam_user_policy.userpolicy",
              "Service": "iam",
              "StartLine": 34
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 'ec2:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user_policy\" \"userpolicy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"lambda:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"cloudwatch:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 39,
              "Provider": "AWS",
              "Resource": "aws_iam_user_policy.userpolicy",
              "Service": "iam",
              "StartLine": 34
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 'ec2:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user_policy\" \"userpolicy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"lambda:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"cloudwatch:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 39,
              "Provider": "AWS",
              "Resource": "aws_iam_user_policy.userpolicy",
              "Service": "iam",
              "StartLine": 34
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 'ec2:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user_policy\" \"userpolicy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Action\": [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"ec2:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"s3:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"lambda:*\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        \"cloudwatch:*\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ],",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 39,
              "Provider": "AWS",
              "Resource": "aws_iam_user_policy.userpolicy",
              "Service": "iam",
              "StartLine": 34
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses wildcarded action 'ec2:*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user_policy\" \"userpolicy\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      \"Resource\": \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "AWS",
              "Resource": "aws_iam_user_policy.userpolicy",
              "Service": "iam",
              "StartLine": 41
            },
            "Description": "You should use the principle of least privilege when defining your IAM policies. This means you should specify each exact permission required without using wildcards, as this could cause the granting of access to certain undesired actions, resources and principals.",
            "ID": "AVD-AWS-0057",
            "Layer": {},
            "Message": "IAM policy document uses sensitive action 'ec2:*' on wildcarded resource '*'",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0057",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0057"
            ],
            "Resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0143",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_iam_user\" \"user\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name          = \"${local.resource_prefix.value}-user\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-user\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Environment = local.resource_prefix.value",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }, {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "AWS",
              "Resource": "aws_iam_user.user",
              "Service": "iam",
              "StartLine": 1
            },
            "Description": "\nCIS recommends that you apply IAM policies directly to groups and roles but not users. Assigning privileges at the group or role level reduces the complexity of access management as the number of users grow. Reducing access management complexity might in turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.\n\t\t\t",
            "ID": "AVD-AWS-0143",
            "Layer": {},
            "Message": "One or more policies are attached directly to a user",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0143",
            "Query": "data..",
            "References": [
              "https://console.aws.amazon.com/iam/",
              "https://avd.aquasec.com/misconfig/avd-aws-0143"
            ],
            "Resolution": "Grant policies at the group level instead.",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "IAM policies should not be granted directly to users.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/iam.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 1,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0065",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_kms_key\" \"logs_key\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # key does not have rotation enabled",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  description = \"${local.resource_prefix.value}-logs bucket key\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  deletion_window_in_days = 7",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/kms.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2020-06-16 14:46:24\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 16,
              "Provider": "AWS",
              "Resource": "aws_kms_key.logs_key",
              "Service": "kms",
              "StartLine": 1
            },
            "Description": "You should configure your KMS keys to auto rotate to maintain security and defend against compromise.",
            "ID": "AVD-AWS-0065",
            "Layer": {},
            "Message": "Key does not have rotation enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0065",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0065"
            ],
            "Resolution": "Configure KMS key to auto rotate",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "A KMS key is not configured to auto-rotate.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/kms.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 1,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0066",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_lambda_function\" \"analysis_lambda\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # lambda have plain text secrets in environment variables",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  filename      = \"resources/lambda_function_payload.zip\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  function_name = \"${local.resource_prefix.value}-analysis\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role          = \"${aws_iam_role.iam_for_lambda.arn}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  handler       = \"exports.test\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  source_code_hash = \"${filebase64sha256(\"resources/lambda_function_payload.zip\")}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 59,
              "Provider": "AWS",
              "Resource": "aws_lambda_function.analysis_lambda",
              "Service": "lambda",
              "StartLine": 32
            },
            "Description": "X-Ray tracing enables end-to-end debugging and analysis of all function activity. This will allow for identifying bottlenecks, slow downs and timeouts.",
            "ID": "AVD-AWS-0066",
            "Layer": {},
            "Message": "Function does not have tracing enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0066",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0066"
            ],
            "Resolution": "Enable tracing",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Lambda functions should have X-Ray tracing enabled",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/lambda.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 3,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0075",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_neptune_cluster\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier                  = var.neptune-dbname",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  engine                              = \"neptune\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period             = 5",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  preferred_backup_window             = \"07:00-09:00\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  skip_final_snapshot                 = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  iam_database_authentication_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  apply_immediately                   = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_encrypted                   = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 20,
              "Provider": "AWS",
              "Resource": "aws_neptune_cluster.default",
              "Service": "neptune",
              "StartLine": 1
            },
            "Description": "Neptune does not have auditing by default. To ensure that you are able to accurately audit the usage of your Neptune instance you should enable export logs.",
            "ID": "AVD-AWS-0075",
            "Layer": {},
            "Message": "Cluster does not have audit logging enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0075",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/auditing.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0075"
            ],
            "Resolution": "Enable export logs",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Neptune logs export should be enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0076",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_neptune_cluster\" \"default\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  storage_encrypted                   = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 9,
              "Provider": "AWS",
              "Resource": "aws_neptune_cluster.default",
              "Service": "neptune",
              "StartLine": 9
            },
            "Description": "Encryption of Neptune storage ensures that if their is compromise of the disks, the data is still protected.",
            "ID": "AVD-AWS-0076",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0076",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/encrypt.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0076"
            ],
            "Resolution": "Enable encryption of Neptune storage",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Neptune storage must be encrypted at rest",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0128",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_neptune_cluster\" \"default\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier                  = var.neptune-dbname",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  engine                              = \"neptune\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period             = 5",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  preferred_backup_window             = \"07:00-09:00\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  skip_final_snapshot                 = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  iam_database_authentication_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  apply_immediately                   = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_encrypted                   = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 20,
              "Provider": "AWS",
              "Resource": "aws_neptune_cluster.default",
              "Service": "neptune",
              "StartLine": 1
            },
            "Description": "Encryption using AWS keys provides protection for your Neptune underlying storage. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0128",
            "Layer": {},
            "Message": "Cluster does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0128",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/neptune/latest/userguide/encrypt.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0128"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Neptune encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/neptune.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 11,
          "Successes": 1
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0077",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app1-rds-cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "0",
                    "Content": "  backup_retention_period = 0",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 4,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app1-rds-cluster",
              "Service": "rds",
              "StartLine": 4
            },
            "Description": "RDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.",
            "ID": "AVD-AWS-0077",
            "Layer": {},
            "Message": "Cluster has very low backup retention period.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0077",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention",
              "https://avd.aquasec.com/misconfig/avd-aws-0077"
            ],
            "Resolution": "Explicitly set the retention period to greater than the default",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0077",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app2-rds-cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  },
                  {
                    "Annotation": "1",
                    "Content": "  backup_retention_period = 1",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 20,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app2-rds-cluster",
              "Service": "rds",
              "StartLine": 20
            },
            "Description": "RDS backup retention for clusters defaults to 1 day, this may not be enough to identify and respond to an issue. Backup retention periods should be set to a period that is a balance on cost and limiting risk.",
            "ID": "AVD-AWS-0077",
            "Layer": {},
            "Message": "Cluster has very low backup retention period.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0077",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention",
              "https://avd.aquasec.com/misconfig/avd-aws-0077"
            ],
            "Resolution": "Explicitly set the retention period to greater than the default",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app1-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app1-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 0",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 15,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app1-rds-cluster",
              "Service": "rds",
              "StartLine": 1
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app2-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app2-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 31,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app2-rds-cluster",
              "Service": "rds",
              "StartLine": 17
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app3-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app3-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 15",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 47,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app3-rds-cluster",
              "Service": "rds",
              "StartLine": 33
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app4-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app4-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 15",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 52,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 53,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 54,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 55,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 56,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 57,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app4-rds-cluster",
              "Service": "rds",
              "StartLine": 49
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app5-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app5-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 15",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 79,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app5-rds-cluster",
              "Service": "rds",
              "StartLine": 65
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app6-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app6-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 15",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 87,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 88,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 95,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app6-rds-cluster",
              "Service": "rds",
              "StartLine": 81
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app7-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app7-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 25",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 103,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 104,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 105,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app7-rds-cluster",
              "Service": "rds",
              "StartLine": 97
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app8-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app8-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 25",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 128,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app8-rds-cluster",
              "Service": "rds",
              "StartLine": 113
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0079",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_rds_cluster\" \"app9-rds-cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 130,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster_identifier      = \"app9-rds-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 131,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allocated_storage       = 10",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 132,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_period = 25",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 133,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 134,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"079fe74f6b96d887c245664fbd8cf676c92f20e5\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/aws/rds.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2021-12-08 23:26:32\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"tron47@gmail.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 144,
              "Provider": "AWS",
              "Resource": "aws_rds_cluster.app9-rds-cluster",
              "Service": "rds",
              "StartLine": 130
            },
            "Description": "Encryption should be enabled for an RDS Aurora cluster. \n\nWhen enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
            "ID": "AVD-AWS-0079",
            "Layer": {},
            "Message": "Cluster does not have storage encryption enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0079",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0079"
            ],
            "Resolution": "Enable encryption for RDS clusters",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/rds.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 1,
          "Successes": 21
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-DS-0002",
            "CauseMetadata": {
              "Code": {
                "Lines": null
              },
              "Provider": "Dockerfile",
              "Service": "general"
            },
            "Description": "Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.",
            "ID": "DS002",
            "Layer": {},
            "Message": "Specify at least 1 USER command in Dockerfile with non-root user as argument",
            "Namespace": "builtin.dockerfile.DS002",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/ds002",
            "Query": "data.builtin.dockerfile.DS002.deny",
            "References": [
              "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
              "https://avd.aquasec.com/misconfig/ds002"
            ],
            "Resolution": "Add 'USER \u003cnon root user name\u003e' line to the Dockerfile",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Image user should not be 'root'",
            "Type": "Dockerfile Security Check"
          }
        ],
        "Target": "aws/resources/Dockerfile",
        "Type": "dockerfile"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 38,
          "Successes": 4
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0086",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "\nS3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL a.\n",
            "ID": "AVD-AWS-0086",
            "Layer": {},
            "Message": "No public access block so not blocking public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0086",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0086"
            ],
            "Resolution": "Enable blocking any PUT calls with a public ACL specified",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public ACL",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0087",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "\nS3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.\n",
            "ID": "AVD-AWS-0087",
            "Layer": {},
            "Message": "No public access block so not blocking public policies",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0087",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0087"
            ],
            "Resolution": "Prevent policies that allow public access being PUT",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should block public policy",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket does not have encryption enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket does not have encryption enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket does not have encryption enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0088",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
            "ID": "AVD-AWS-0088",
            "Layer": {},
            "Message": "Bucket does not have encryption enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0088"
            ],
            "Resolution": "Configure bucket encryption",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Unencrypted S3 bucket.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0089",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "Buckets should have logging enabled so that access can be audited.",
            "ID": "AVD-AWS-0089",
            "Layer": {},
            "Message": "Bucket does not have logging enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0089",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0089"
            ],
            "Resolution": "Add a logging block to the resource to enable access logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Bucket does not have logging enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0089",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "Buckets should have logging enabled so that access can be audited.",
            "ID": "AVD-AWS-0089",
            "Layer": {},
            "Message": "Bucket does not have logging enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0089",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0089"
            ],
            "Resolution": "Add a logging block to the resource to enable access logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Bucket does not have logging enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0089",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "Buckets should have logging enabled so that access can be audited.",
            "ID": "AVD-AWS-0089",
            "Layer": {},
            "Message": "Bucket does not have logging enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0089",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0089"
            ],
            "Resolution": "Add a logging block to the resource to enable access logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Bucket does not have logging enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0090",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n",
            "ID": "AVD-AWS-0090",
            "Layer": {},
            "Message": "Bucket does not have versioning enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0090",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0090"
            ],
            "Resolution": "Enable versioning to protect against accidental/malicious removal or modification",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Data should be versioned",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0090",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "\nVersioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. \nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. \nWith versioning you can recover more easily from both unintended user actions and application failures.\n",
            "ID": "AVD-AWS-0090",
            "Layer": {},
            "Message": "Bucket does not have versioning enabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0090",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0090"
            ],
            "Resolution": "Enable versioning to protect against accidental/malicious removal or modification",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "S3 Data should be versioned",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0091",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "\nS3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.\n",
            "ID": "AVD-AWS-0091",
            "Layer": {},
            "Message": "No public access block so not ignoring public acls",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0091",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0091"
            ],
            "Resolution": "Enable ignoring the application of public ACLs in PUT calls",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access Block should Ignore Public Acl",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0093",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
            "ID": "AVD-AWS-0093",
            "Layer": {},
            "Message": "No public access block so not restricting public buckets",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0093",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0093"
            ],
            "Resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 Access block should restrict public bucket to limit access",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0094",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"logs\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 113,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-logs\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 114,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"log-delivery-write\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_side_encryption_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    rule {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      apply_server_side_encryption_by_default {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 141,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.logs",
              "Service": "s3",
              "StartLine": 113
            },
            "Description": "The \"block public access\" settings in S3 override individual policies that apply to a given bucket, meaning that all public access can be controlled in one central types for that bucket. It is therefore good practice to define these settings for each bucket in order to clearly define the public access that can be allowed for it.",
            "ID": "AVD-AWS-0094",
            "Layer": {},
            "Message": "Bucket does not have a corresponding public access block.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0094",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0094"
            ],
            "Resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "S3 buckets should each define an aws_s3_bucket_public_access_block",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0132",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is public",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-data\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 21,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data",
              "Service": "s3",
              "StartLine": 1
            },
            "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0132",
            "Layer": {},
            "Message": "Bucket does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0132"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0132",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"financials\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have versioning",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl           = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    Name        = \"${local.resource_prefix.value}-financials\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.financials",
              "Service": "s3",
              "StartLine": 42
            },
            "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0132",
            "Layer": {},
            "Message": "Bucket does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0132"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0132",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"operations\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket does not have access logs",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-operations\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 72,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 87,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.operations",
              "Service": "s3",
              "StartLine": 65
            },
            "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0132",
            "Layer": {},
            "Message": "Bucket does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0132"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AWS-0132",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"aws_s3_bucket\" \"data_science\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 89,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  # bucket is not encrypted",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 90,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket = \"${local.resource_prefix.value}-data-science\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 91,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  acl    = \"private\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  versioning {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 93,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 94,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    target_bucket = \"${aws_s3_bucket.logs.id}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 111,
              "Provider": "AWS",
              "Resource": "aws_s3_bucket.data_science",
              "Service": "s3",
              "StartLine": 89
            },
            "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.",
            "ID": "AVD-AWS-0132",
            "Layer": {},
            "Message": "Bucket does not encrypt data with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
            "Query": "data..",
            "References": [
              "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
              "https://avd.aquasec.com/misconfig/avd-aws-0132"
            ],
            "Resolution": "Enable encryption using customer managed keys",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "S3 encryption should use Customer Managed Keys",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "aws/s3.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 0,
          "Successes": 2
        },
        "Target": "azure",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 4,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0040",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_kubernetes_cluster \"k8s_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "      enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 16,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 16,
              "Provider": "Azure",
              "Resource": "azurerm_kubernetes_cluster.k8s_cluster",
              "Service": "container",
              "StartLine": 16
            },
            "Description": "Ensure AKS logging to Azure Monitoring is configured for containers to monitor the performance of workloads.",
            "ID": "AVD-AZU-0040",
            "Layer": {},
            "Message": "Cluster does not have logging enabled via OMS Agent.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0040",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-onboard",
              "https://avd.aquasec.com/misconfig/avd-azu-0040"
            ],
            "Resolution": "Enable logging for AKS",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure AKS logging to Azure Monitoring is Configured",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0041",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_kubernetes_cluster \"k8s_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  dns_prefix          = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-aks-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  identity {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    type = \"SystemAssigned\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  default_node_pool {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 35,
              "Provider": "Azure",
              "Resource": "azurerm_kubernetes_cluster.k8s_cluster",
              "Service": "container",
              "StartLine": 1
            },
            "Description": "The API server is the central way to interact with and manage a cluster. To improve cluster security and minimize attacks, the API server should only be accessible from a limited set of IP address ranges.",
            "ID": "AVD-AZU-0041",
            "Layer": {},
            "Message": "Cluster does not limit API access to specific IP addresses.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0041",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges",
              "https://avd.aquasec.com/misconfig/avd-azu-0041"
            ],
            "Resolution": "Limit the access to the API server to a limited IP range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "Ensure AKS has an API Server Authorized IP Ranges enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0042",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_kubernetes_cluster \"k8s_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "    enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 23,
              "Provider": "Azure",
              "Resource": "azurerm_kubernetes_cluster.k8s_cluster",
              "Service": "container",
              "StartLine": 23
            },
            "Description": "Using Kubernetes role-based access control (RBAC), you can grant users, groups, and service accounts access to only the resources they need.",
            "ID": "AVD-AZU-0042",
            "Layer": {},
            "Message": "Cluster has RBAC disabled",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0042",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/aks/concepts-identity",
              "https://avd.aquasec.com/misconfig/avd-azu-0042"
            ],
            "Resolution": "Enable RBAC",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Ensure RBAC is enabled on AKS clusters",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0043",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_kubernetes_cluster \"k8s_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  dns_prefix          = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-aks-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  identity {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    type = \"SystemAssigned\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  default_node_pool {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 35,
              "Provider": "Azure",
              "Resource": "azurerm_kubernetes_cluster.k8s_cluster",
              "Service": "container",
              "StartLine": 1
            },
            "Description": "The Kubernetes object type NetworkPolicy should be defined to have opportunity allow or block traffic to pods, as in a Kubernetes cluster configured with default settings, all pods can discover and communicate with each other without any restrictions.",
            "ID": "AVD-AZU-0043",
            "Layer": {},
            "Message": "Kubernetes cluster does not have a network policy set.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0043",
            "Query": "data..",
            "References": [
              "https://kubernetes.io/docs/concepts/services-networking/network-policies",
              "https://avd.aquasec.com/misconfig/avd-azu-0043"
            ],
            "Resolution": "Configure a network policy",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Ensure AKS cluster has Network Policy configured",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "azure/aks.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 9,
          "Successes": 1
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0001",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  site_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    min_tls_version = \"1.1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service1",
              "Service": "appservice",
              "StartLine": 22
            },
            "Description": "The TLS mutual authentication technique in enterprise environments ensures the authenticity of clients to the server. If incoming client certificates are enabled only an authenticated client with valid certificates can access the app.",
            "ID": "AVD-AZU-0001",
            "Layer": {},
            "Message": "App service does not have client certificates enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0001",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0001"
            ],
            "Resolution": "Enable incoming certificates for clients",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App accepts incoming client certificate",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0001",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auth_settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 52,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service2",
              "Service": "appservice",
              "StartLine": 43
            },
            "Description": "The TLS mutual authentication technique in enterprise environments ensures the authenticity of clients to the server. If incoming client certificates are enabled only an authenticated client with valid certificates can access the app.",
            "ID": "AVD-AZU-0001",
            "Layer": {},
            "Message": "App service does not have client certificates enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0001",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0001"
            ],
            "Resolution": "Enable incoming certificates for clients",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App accepts incoming client certificate",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0002",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  site_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    min_tls_version = \"1.1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service1",
              "Service": "appservice",
              "StartLine": 22
            },
            "Description": "Registering the identity used by an App with AD allows it to interact with other services without using username and password",
            "ID": "AVD-AZU-0002",
            "Layer": {},
            "Message": "App service does not have an identity type.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0002",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0002"
            ],
            "Resolution": "Register the app identity with AD",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App has registration with AD enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0002",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auth_settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 52,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service2",
              "Service": "appservice",
              "StartLine": 43
            },
            "Description": "Registering the identity used by an App with AD allows it to interact with other services without using username and password",
            "ID": "AVD-AZU-0002",
            "Layer": {},
            "Message": "App service does not have an identity type.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0002",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0002"
            ],
            "Resolution": "Register the app identity with AD",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App has registration with AD enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0003",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  site_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    min_tls_version = \"1.1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 41,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service1",
              "Service": "appservice",
              "StartLine": 22
            },
            "Description": "Enabling authentication ensures that all communications in the application are authenticated. The auth_settings block needs to be filled out with the appropriate auth backend settings",
            "ID": "AVD-AZU-0003",
            "Layer": {},
            "Message": "App service does not have authentication enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0003",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0003"
            ],
            "Resolution": "Enable authentication to prevent anonymous request being accepted",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "App Service authentication is activated",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0003",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service2\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "    enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 51,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service2",
              "Service": "appservice",
              "StartLine": 51
            },
            "Description": "Enabling authentication ensures that all communications in the application are authenticated. The auth_settings block needs to be filled out with the appropriate auth backend settings",
            "ID": "AVD-AZU-0003",
            "Layer": {},
            "Message": "App service does not have authentication enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0003",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0003"
            ],
            "Resolution": "Enable authentication to prevent anonymous request being accepted",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "App Service authentication is activated",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0005",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service1\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  site_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    min_tls_version = \"1.1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 30,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service1",
              "Service": "appservice",
              "StartLine": 28
            },
            "Description": "Use the latest version of HTTP to ensure you are benefiting from security fixes",
            "ID": "AVD-AZU-0005",
            "Layer": {},
            "Message": "App service does not have HTTP/2 enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0005",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0005"
            ],
            "Resolution": "Use the latest version of HTTP",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App uses the latest HTTP version",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0005",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  app_service_plan_id = azurerm_app_service_plan.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-app-service-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  https_only          = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auth_settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 52,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 63,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service2",
              "Service": "appservice",
              "StartLine": 43
            },
            "Description": "Use the latest version of HTTP to ensure you are benefiting from security fixes",
            "ID": "AVD-AZU-0005",
            "Layer": {},
            "Message": "App service does not have HTTP/2 enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0005",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0005"
            ],
            "Resolution": "Use the latest version of HTTP",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Web App uses the latest HTTP version",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0006",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_app_service \"app-service1\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"1.1\"",
                    "Content": "    min_tls_version = \"1.1\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Azure",
              "Resource": "azurerm_app_service.app-service1",
              "Service": "appservice",
              "StartLine": 29
            },
            "Description": "Use a more recent TLS/SSL policy for the App Service",
            "ID": "AVD-AZU-0006",
            "Layer": {},
            "Message": "App service does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0006",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0006"
            ],
            "Resolution": "The TLS version being outdated and has known vulnerabilities",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Web App uses latest TLS version",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "azure/app_service.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 1,
          "Successes": 1
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0039",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_linux_virtual_machine \"linux_machine\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  disable_password_authentication = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 17,
              "Provider": "Azure",
              "Resource": "azurerm_linux_virtual_machine.linux_machine",
              "Service": "compute",
              "StartLine": 17
            },
            "Description": "Access to virtual machines should be authenticated using SSH keys. Removing the option of password authentication enforces more secure methods while removing the risks inherent with passwords.",
            "ID": "AVD-AZU-0039",
            "Layer": {},
            "Message": "Linux virtual machine allows password authentication.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0039",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0039"
            ],
            "Resolution": "Use ssh authentication for virtual machines",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Password authentication should be disabled on Azure virtual machines",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "azure/instance.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 5,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0013",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_key_vault\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-key-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tenant_id           = data.azurerm_client_config.current.tenant_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name            = \"premium\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  access_policy {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tenant_id = data.azurerm_client_config.current.tenant_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    object_id = data.azurerm_client_config.current.object_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 31,
              "Provider": "Azure",
              "Resource": "azurerm_key_vault.example",
              "Service": "keyvault",
              "StartLine": 1
            },
            "Description": "Network ACLs allow you to reduce your exposure to risk by limiting what can access your key vault. \n\nThe default action of the Network ACL should be set to deny for when IPs are not matched. Azure services can be allowed to bypass.",
            "ID": "AVD-AZU-0013",
            "Layer": {},
            "Message": "Vault network ACL does not block access by default.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0013",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/key-vault/general/network-security",
              "https://avd.aquasec.com/misconfig/avd-azu-0013"
            ],
            "Resolution": "Set a network ACL for the key vault",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "Key vault should have the network acl block specified",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0014",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_key_vault_key\" \"generated\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-generated-certificate-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_vault_id = azurerm_key_vault.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_type     = \"RSA\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_size     = 2048",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_opts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"decrypt\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"encrypt\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"sign\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 56,
              "Provider": "Azure",
              "Resource": "azurerm_key_vault_key.generated",
              "Service": "keyvault",
              "StartLine": 33
            },
            "Description": "Expiration Date is an optional Key Vault Key behavior and is not set by default.\n\nSet when the resource will be become inactive.",
            "ID": "AVD-AZU-0014",
            "Layer": {},
            "Message": "Key should have an expiry date specified.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0014",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/powershell/module/az.keyvault/update-azkeyvaultkey?view=azps-5.8.0#example-1--modify-a-key-to-enable-it--and-set-the-expiration-date-and-tags",
              "https://avd.aquasec.com/misconfig/avd-azu-0014"
            ],
            "Resolution": "Set an expiration date on the vault key",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that the expiration date is set on all keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0015",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_key_vault_secret\" \"secret\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_vault_id = azurerm_key_vault.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-secret-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  value        = random_string.password.result",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"f8ff847bb69370bbe03b3d2b70db586ff6c867fc\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/azure/key_vault.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2020-06-19 21:16:08\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"Adin.Ermie@outlook.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 72,
              "Provider": "Azure",
              "Resource": "azurerm_key_vault_secret.secret",
              "Service": "keyvault",
              "StartLine": 58
            },
            "Description": "Content Type is an optional Key Vault Secret behavior and is not enabled by default.\n\nClients may specify the content type of a secret to assist in interpreting the secret data when it's retrieved. The maximum length of this field is 255 characters. There are no pre-defined values. The suggested usage is as a hint for interpreting the secret data.",
            "ID": "AVD-AZU-0015",
            "Layer": {},
            "Message": "Secret does not have a content-type specified.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0015",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets",
              "https://avd.aquasec.com/misconfig/avd-azu-0015"
            ],
            "Resolution": "Provide content type for secrets to aid interpretation on retrieval",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Key vault Secret should have a content type set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0016",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_key_vault\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-key-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tenant_id           = data.azurerm_client_config.current.tenant_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name            = \"premium\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  access_policy {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tenant_id = data.azurerm_client_config.current.tenant_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    object_id = data.azurerm_client_config.current.object_id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 31,
              "Provider": "Azure",
              "Resource": "azurerm_key_vault.example",
              "Service": "keyvault",
              "StartLine": 1
            },
            "Description": "Purge protection is an optional Key Vault behavior and is not enabled by default.\n\nPurge protection can only be enabled once soft-delete is enabled. It can be turned on via CLI or PowerShell.",
            "ID": "AVD-AZU-0016",
            "Layer": {},
            "Message": "Vault does not have purge protection enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0016",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview#purge-protection",
              "https://avd.aquasec.com/misconfig/avd-azu-0016"
            ],
            "Resolution": "Enable purge protection for key vaults",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Key vault should have purge protection enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0017",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_key_vault_secret\" \"secret\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  key_vault_id = azurerm_key_vault.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-secret-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  value        = random_string.password.result",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"f8ff847bb69370bbe03b3d2b70db586ff6c867fc\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform/azure/key_vault.tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2020-06-19 21:16:08\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"Adin.Ermie@outlook.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 72,
              "Provider": "Azure",
              "Resource": "azurerm_key_vault_secret.secret",
              "Service": "keyvault",
              "StartLine": 58
            },
            "Description": "Expiration Date is an optional Key Vault Secret behavior and is not set by default.\n\nSet when the resource will be become inactive.",
            "ID": "AVD-AZU-0017",
            "Layer": {},
            "Message": "Secret should have an expiry date specified.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0017",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets",
              "https://avd.aquasec.com/misconfig/avd-azu-0017"
            ],
            "Resolution": "Set an expiry for secrets",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Key Vault Secret should have an expiration date set",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "azure/key_vault.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 4,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0031",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_monitor_log_profile \"logging_profile\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_id = azurerm_storage_account.example.id",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  categories         = [\"Action\"]",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  locations          = [var.location]",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  retention_policy {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "30",
                    "Content": "    days    = 30",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 8,
              "Provider": "Azure",
              "Resource": "azurerm_monitor_log_profile.logging_profile",
              "Service": "monitor",
              "StartLine": 8
            },
            "Description": "The average time to detect a breach is up to 210 days, to ensure that all the information required for an effective investigation is available, the retention period should allow for delayed starts to investigating.",
            "ID": "AVD-AZU-0031",
            "Layer": {},
            "Message": "Profile has a log retention policy of less than 1 year.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0031",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/platform-logs-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0031"
            ],
            "Resolution": "Set a retention period that will allow for delayed investigation",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure the activity retention log is set to at least a year",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0032",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_monitor_log_profile \"logging_profile\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_id = azurerm_storage_account.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  categories         = [\"Action\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  locations          = [var.location]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  retention_policy {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    days    = 30",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 10,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 10,
              "Provider": "Azure",
              "Resource": "azurerm_monitor_log_profile.logging_profile",
              "Service": "monitor",
              "StartLine": 1
            },
            "Description": "Log profiles should capture all regions to ensure that all events are logged",
            "ID": "AVD-AZU-0032",
            "Layer": {},
            "Message": "Log profile does not log to all regions (68 regions missing).",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0032",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/cli/azure/monitor/log-profiles?view=azure-cli-latest#az_monitor_log_profiles_create-required-parameters",
              "https://avd.aquasec.com/misconfig/avd-azu-0032"
            ],
            "Resolution": "Enable capture for all locations",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure activitys are captured for all locations",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0033",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_monitor_log_profile \"logging_profile\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_id = azurerm_storage_account.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  categories         = [\"Action\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  locations          = [var.location]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  retention_policy {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    days    = 30",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 10,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 10,
              "Provider": "Azure",
              "Resource": "azurerm_monitor_log_profile.logging_profile",
              "Service": "monitor",
              "StartLine": 1
            },
            "Description": "Log profiles should capture all categories to ensure that all events are logged",
            "ID": "AVD-AZU-0033",
            "Layer": {},
            "Message": "Log profile does not require the 'Delete' category.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0033",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/activity-log",
              "https://docs.microsoft.com/en-us/cli/azure/monitor/log-profiles?view=azure-cli-latest#az_monitor_log_profiles_create-required-parameters",
              "https://avd.aquasec.com/misconfig/avd-azu-0033"
            ],
            "Resolution": "Configure log profile to capture all activities",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure log profile captures all activities",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0033",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_monitor_log_profile \"logging_profile\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_id = azurerm_storage_account.example.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  categories         = [\"Action\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  locations          = [var.location]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  retention_policy {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    days    = 30",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 10,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 10,
              "Provider": "Azure",
              "Resource": "azurerm_monitor_log_profile.logging_profile",
              "Service": "monitor",
              "StartLine": 1
            },
            "Description": "Log profiles should capture all categories to ensure that all events are logged",
            "ID": "AVD-AZU-0033",
            "Layer": {},
            "Message": "Log profile does not require the 'Write' category.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0033",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/activity-log",
              "https://docs.microsoft.com/en-us/cli/azure/monitor/log-profiles?view=azure-cli-latest#az_monitor_log_profiles_create-required-parameters",
              "https://avd.aquasec.com/misconfig/avd-azu-0033"
            ],
            "Resolution": "Configure log profile to capture all activities",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure log profile captures all activities",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "azure/logging.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 37,
          "Successes": 2
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0011",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_storage_account\" \"security_storage_account\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                      = \"securitystorageaccount-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name       = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                  = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_tier              = \"Standard\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_replication_type  = \"LRS\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_https_traffic_only = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"a1d1c1ce31a1bde6dafa188846d90eca82abe5fd\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 18,
              "Provider": "Azure",
              "Resource": "azurerm_storage_account.security_storage_account",
              "Service": "storage",
              "StartLine": 1
            },
            "Description": "Azure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. \n\nAzure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility.\n\nThis check will warn if the minimum TLS is not set to TLS1_2.",
            "ID": "AVD-AZU-0011",
            "Layer": {},
            "Message": "Storage account uses an insecure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0011",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version",
              "https://avd.aquasec.com/misconfig/avd-azu-0011"
            ],
            "Resolution": "Use a more recent TLS/SSL policy for the load balancer",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "The minimum TLS version for Storage Accounts should be TLS1_2",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0018",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy5\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 209,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 210,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql5.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 211,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 212,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 213,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 214,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 218,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 220,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy5",
              "Service": "database",
              "StartLine": 209
            },
            "Description": "SQL Server sends alerts for threat detection via email, if there are no email addresses set then mitigation will be delayed.",
            "ID": "AVD-AZU-0018",
            "Layer": {},
            "Message": "Security alert policy does not include any email addresses for notification.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0018",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0018"
            ],
            "Resolution": "Provide at least one email address for threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "At least one email address is set for threat alerts",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-mssql1-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 37,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql1",
              "Service": "database",
              "StartLine": 20
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql2-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 56,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql2",
              "Service": "database",
              "StartLine": 39
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql3\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql3-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 75,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql3",
              "Service": "database",
              "StartLine": 58
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql4\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql4-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 94,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql4",
              "Service": "database",
              "StartLine": 77
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql5\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql5-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 103,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 104,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 105,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 113,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql5",
              "Service": "database",
              "StartLine": 96
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql6\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql6-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 132,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql6",
              "Service": "database",
              "StartLine": 115
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql7\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 134,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql7-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 142,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 143,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 151,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql7",
              "Service": "database",
              "StartLine": 134
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 153,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 154,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql1.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 155,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 156,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 157,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 158,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 159,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 160,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 161,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 162,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 165,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy1",
              "Service": "database",
              "StartLine": 153
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 167,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 168,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql2.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 169,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 170,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 171,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 172,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 173,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 174,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 175,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 176,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 179,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy2",
              "Service": "database",
              "StartLine": 167
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy3\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 181,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 182,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql3.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 183,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 184,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 185,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 186,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 187,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 188,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 189,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 190,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 193,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy3",
              "Service": "database",
              "StartLine": 181
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy4\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 195,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 196,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql4.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 197,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 198,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 199,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 200,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 201,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 202,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 203,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 204,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 207,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy4",
              "Service": "database",
              "StartLine": 195
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy5\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 209,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 210,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql5.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 211,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 212,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 213,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 214,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 218,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 220,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy5",
              "Service": "database",
              "StartLine": 209
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy6\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 222,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 223,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql6.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 224,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 226,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 227,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 228,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 229,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 230,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 231,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 234,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy6",
              "Service": "database",
              "StartLine": 222
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy7\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 236,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 237,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql7.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 238,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 239,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 240,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 241,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 242,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 243,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 244,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 245,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 248,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy7",
              "Service": "database",
              "StartLine": 236
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-mssql1-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 37,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql1",
              "Service": "database",
              "StartLine": 20
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql2-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 56,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql2",
              "Service": "database",
              "StartLine": 39
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql3\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql3-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 75,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql3",
              "Service": "database",
              "StartLine": 58
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql4\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql4-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 94,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql4",
              "Service": "database",
              "StartLine": 77
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql5\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql5-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 103,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 104,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 105,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 113,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql5",
              "Service": "database",
              "StartLine": 96
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql6\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql6-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 132,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql6",
              "Service": "database",
              "StartLine": 115
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql7\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 134,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql7-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 142,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 143,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 151,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql7",
              "Service": "database",
              "StartLine": 134
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql1\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-mssql1-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 37,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql1",
              "Service": "database",
              "StartLine": 20
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql2\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql2-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 56,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql2",
              "Service": "database",
              "StartLine": 39
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql3\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 58,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql3-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 61,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 75,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql3",
              "Service": "database",
              "StartLine": 58
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql4\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql4-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 83,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 84,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 86,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 94,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql4",
              "Service": "database",
              "StartLine": 77
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql5\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql5-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 97,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 103,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 104,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 105,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 113,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql5",
              "Service": "database",
              "StartLine": 96
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql6\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 115,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql6-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 116,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 117,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 118,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 119,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 120,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 121,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 122,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 123,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 124,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 132,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql6",
              "Service": "database",
              "StartLine": 115
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server\" \"mssql7\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 134,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"mssql7-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 135,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 136,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 137,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 138,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"missadministrator\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 139,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"AdminPassword123!\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 140,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 141,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"c6f8caa51942284d02465518822685897ad90141\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 142,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 143,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 151,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server.mssql7",
              "Service": "database",
              "StartLine": 134
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy1\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 153,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 154,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql1.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 155,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 156,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 157,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 158,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 159,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 160,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 161,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 162,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 162,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy1",
              "Service": "database",
              "StartLine": 159
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy2\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 167,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 168,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql2.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 169,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 170,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 171,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 172,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 173,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 174,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 175,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 176,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 176,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy2",
              "Service": "database",
              "StartLine": 173
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy3\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 181,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 182,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql3.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 183,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 184,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 185,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 186,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 187,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 188,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 189,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 190,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 190,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy3",
              "Service": "database",
              "StartLine": 187
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy4\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 195,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 196,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql4.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 197,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 198,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 199,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 200,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 201,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 202,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 203,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 204,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 204,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy4",
              "Service": "database",
              "StartLine": 201
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy5\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 209,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 210,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql5.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 211,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 212,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 213,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 214,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 215,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 216,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 217,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 218,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 218,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy5",
              "Service": "database",
              "StartLine": 215
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy6\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 222,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 223,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql6.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 224,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 225,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 226,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 227,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 228,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 229,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 230,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 231,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 231,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy6",
              "Service": "database",
              "StartLine": 228
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"alertpolicy7\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 236,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 237,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_mssql_server.mssql7.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 238,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 239,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.security_storage_account.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 240,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.security_storage_account.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 241,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 242,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 243,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 244,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 245,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 245,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.alertpolicy7",
              "Service": "database",
              "StartLine": 242
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "azure/mssql.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 5,
          "Successes": 2
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0047",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_security_group \"bad_sg\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"*\"",
                    "Content": "    source_address_prefix      = \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 107,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 80,
              "Provider": "Azure",
              "Resource": "azurerm_network_security_group.bad_sg",
              "Service": "network",
              "StartLine": 80
            },
            "Description": "Network security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets.",
            "ID": "AVD-AZU-0047",
            "Layer": {},
            "Message": "Security group rule allows ingress from public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0047",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/security/fundamentals/network-best-practices",
              "https://avd.aquasec.com/misconfig/avd-azu-0047"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An inbound network security rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0047",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_security_group \"bad_sg\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"*\"",
                    "Content": "    source_address_prefix      = \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 107,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 92,
              "Provider": "Azure",
              "Resource": "azurerm_network_security_group.bad_sg",
              "Service": "network",
              "StartLine": 92
            },
            "Description": "Network security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets.",
            "ID": "AVD-AZU-0047",
            "Layer": {},
            "Message": "Security group rule allows ingress from public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0047",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/security/fundamentals/network-best-practices",
              "https://avd.aquasec.com/misconfig/avd-azu-0047"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An inbound network security rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0048",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_security_group \"bad_sg\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"*\"",
                    "Content": "    source_address_prefix      = \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 92,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 107,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 92,
              "Provider": "Azure",
              "Resource": "azurerm_network_security_group.bad_sg",
              "Service": "network",
              "StartLine": 92
            },
            "Description": "RDP access can be configured on either the network security group or in the network security group rule.\n\nRDP access should not be permitted from the internet (*, 0.0.0.0, /0, internet, any). Consider using the Azure Bastion Service.",
            "ID": "AVD-AZU-0048",
            "Layer": {},
            "Message": "Security group rule allows ingress to RDP port from multiple public internet addresses.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0048",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/bastion/tutorial-create-host-portal",
              "https://avd.aquasec.com/misconfig/avd-azu-0048"
            ],
            "Resolution": "Block RDP port from internet",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "RDP access should not be accessible from the Internet, should be blocked on port 3389",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0049",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_watcher_flow_log \"flow_log\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 125,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 126,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "    enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 132,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 144,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 145,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 132,
              "Provider": "Azure",
              "Resource": "azurerm_network_watcher_flow_log.flow_log",
              "Service": "network",
              "StartLine": 132
            },
            "Description": "Flow logs are the source of truth for all network activity in your cloud environment. \nTo enable analysis in security event that was detected late, you need to have the logs available. \n\t\t\t\nSetting an retention policy will help ensure as much information is available for review.",
            "ID": "AVD-AZU-0049",
            "Layer": {},
            "Message": "Flow log does not enable the log retention policy.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0049",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-monitoring-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0049"
            ],
            "Resolution": "Ensure flow log retention is turned on with an expiry of \u003e90 days",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Retention policy for flow logs should be enabled and set to greater than 90 days",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0050",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_network_security_group \"bad_sg\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 69,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"*\"",
                    "Content": "    source_address_prefix      = \"*\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 107,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 80,
              "Provider": "Azure",
              "Resource": "azurerm_network_security_group.bad_sg",
              "Service": "network",
              "StartLine": 80
            },
            "Description": "SSH access can be configured on either the network security group or in the network security group rule. \n\nSSH access should not be permitted from the internet (*, 0.0.0.0, /0, internet, any)",
            "ID": "AVD-AZU-0050",
            "Layer": {},
            "Message": "Security group rule allows ingress to SSH port from multiple public internet addresses.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0050",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0050"
            ],
            "Resolution": "Block port 22 access from the internet",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "SSH access should not be accessible from the Internet, should be blocked on port 22",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "azure/networking.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 0,
          "Successes": 1
        },
        "Target": "azure/roles.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 3,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0044",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_security_center_contact \"contact\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "false",
                    "Content": "  alert_notifications = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  alerts_to_admins    = false",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  email               = \"some@email.com\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 6,
              "Provider": "Azure",
              "Resource": "azurerm_security_center_contact.contact",
              "Service": "security-center",
              "StartLine": 6
            },
            "Description": "It is recommended that at least one valid contact is configured for the security center. \nMicrosoft will notify the security contact directly in the event of a security incident using email and require alerting to be turned on.",
            "ID": "AVD-AZU-0044",
            "Layer": {},
            "Message": "Security contact has alert notifications disabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0044",
            "Query": "data..",
            "References": [
              "https://azure.microsoft.com/en-us/services/security-center/",
              "https://avd.aquasec.com/misconfig/avd-azu-0044"
            ],
            "Resolution": " Set alert notifications to be on",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Send notification emails for high severity alerts",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0045",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_security_center_subscription_pricing \"pricing\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "\"Free\"",
                    "Content": "  tier = \"Free\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 2,
              "Provider": "Azure",
              "Resource": "azurerm_security_center_subscription_pricing.pricing",
              "Service": "security-center",
              "StartLine": 2
            },
            "Description": "To benefit from Azure Defender you should use the Standard subscription tier.\n\t\t\t\n\t\t\tEnabling Azure Defender extends the capabilities of the free mode to workloads running in private and other public clouds, providing unified security management and threat protection across your hybrid cloud workloads.",
            "ID": "AVD-AZU-0045",
            "Layer": {},
            "Message": "Security center subscription uses the free tier.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0045",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/security-center/security-center-pricing",
              "https://avd.aquasec.com/misconfig/avd-azu-0045"
            ],
            "Resolution": "Enable standard subscription tier to benefit from Azure Defender",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Enable the standard security center subscription tier",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0046",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource azurerm_security_center_contact \"contact\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  alert_notifications = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  alerts_to_admins    = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  email               = \"some@email.com\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 9,
              "Provider": "Azure",
              "Resource": "azurerm_security_center_contact.contact",
              "Service": "security-center",
              "StartLine": 5
            },
            "Description": "It is recommended that at least one valid contact is configured for the security center. \nMicrosoft will notify the security contact directly in the event of a security incident and will look to use a telephone number in cases where a prompt response is required.",
            "ID": "AVD-AZU-0046",
            "Layer": {},
            "Message": "Security contact does not have a phone number listed.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0046",
            "Query": "data..",
            "References": [
              "https://azure.microsoft.com/en-us/services/security-center/",
              "https://avd.aquasec.com/misconfig/avd-azu-0046"
            ],
            "Resolution": "Set a telephone number for security center contact",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "The required contact details should be set for security center",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "azure/security_center.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 15,
          "Successes": 1
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0018",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_sql_server.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.example.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 42,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.example",
              "Service": "database",
              "StartLine": 31
            },
            "Description": "SQL Server sends alerts for threat detection via email, if there are no email addresses set then mitigation will be delayed.",
            "ID": "AVD-AZU-0018",
            "Layer": {},
            "Message": "Security alert policy does not include any email addresses for notification.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0018",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0018"
            ],
            "Resolution": "Provide at least one email address for threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "At least one email address is set for threat alerts",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0019",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-postgresql-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 75,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 76,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name                     = \"B_Gen5_2\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_mb                   = 5120",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_days        = 7",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  geo_redundant_backup_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auto_grow_enabled            = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 96,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_server.example",
              "Service": "database",
              "StartLine": 73
            },
            "Description": "Postgresql can generate logs for successful connections to improve visibility for audit and configuration issue resolution.",
            "ID": "AVD-AZU-0019",
            "Layer": {},
            "Message": "Database server is not configured to log connections.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0019",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging",
              "https://avd.aquasec.com/misconfig/avd-azu-0019"
            ],
            "Resolution": "Enable connection logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0020",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mysql_server\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  ssl_enforcement_enabled           = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 60,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 60,
              "Provider": "Azure",
              "Resource": "azurerm_mysql_server.example",
              "Service": "database",
              "StartLine": 60
            },
            "Description": "SSL connections should be enforced were available to ensure secure transfer and reduce the risk of compromising data in flight.",
            "ID": "AVD-AZU-0020",
            "Layer": {},
            "Message": "Database server does not have enforce SSL.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0020",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0020"
            ],
            "Resolution": "Enable SSL enforcement",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "SSL should be enforced on database connections where applicable",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0020",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_server\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  ssl_enforcement_enabled      = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 85,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 95,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 96,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 85,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_server.example",
              "Service": "database",
              "StartLine": 85
            },
            "Description": "SSL connections should be enforced were available to ensure secure transfer and reduce the risk of compromising data in flight.",
            "ID": "AVD-AZU-0020",
            "Layer": {},
            "Message": "Database server does not have enforce SSL.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0020",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0020"
            ],
            "Resolution": "Enable SSL enforcement",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "SSL should be enforced on database connections where applicable",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0021",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_configuration\" \"thrtottling_config\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 98,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"connection_throttling\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 99,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 100,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name         = azurerm_postgresql_server.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 101,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  value               = \"off\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 102,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 103,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 102,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_configuration.thrtottling_config",
              "Service": "database",
              "StartLine": 102
            },
            "Description": "Postgresql can generate logs for connection throttling to improve visibility for audit and configuration issue resolution.",
            "ID": "AVD-AZU-0021",
            "Layer": {},
            "Message": "Database server is not configured to throttle connections.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0021",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging",
              "https://avd.aquasec.com/misconfig/avd-azu-0021"
            ],
            "Resolution": "Enable connection throttling logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_sql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"ariel\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"Aa12345678\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    environment = var.environment",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Azure",
              "Resource": "azurerm_sql_server.example",
              "Service": "database",
              "StartLine": 9
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mysql_server\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  public_network_access_enabled     = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 59,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 70,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 71,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 59,
              "Provider": "Azure",
              "Resource": "azurerm_mysql_server.example",
              "Service": "database",
              "StartLine": 59
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-postgresql-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 75,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 76,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name                     = \"B_Gen5_2\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_mb                   = 5120",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_days        = 7",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  geo_redundant_backup_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auto_grow_enabled            = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 96,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_server.example",
              "Service": "database",
              "StartLine": 73
            },
            "Description": "Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
            "ID": "AVD-AZU-0022",
            "Layer": {},
            "Message": "Database server has public network access enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0022",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0022"
            ],
            "Resolution": "Disable public access to database when not required",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure databases are not publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0023",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_sql_server.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.example.primary_access_key",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 42,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.example",
              "Service": "database",
              "StartLine": 31
            },
            "Description": "Subscription owners should be notified when there are security alerts. By ensuring the administrators of the account have been notified they can quickly assist in any required remediation",
            "ID": "AVD-AZU-0023",
            "Layer": {},
            "Message": "Security alert policy does not alert account admins.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0023",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0023"
            ],
            "Resolution": "Enable email to subscription owners",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Security threat alerts go to subcription owners and co-administrators",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0024",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_configuration\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 105,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"log_checkpoints\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 106,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 107,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name         = azurerm_postgresql_server.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 108,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  value               = \"off\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 109,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 110,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 109,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_configuration.example",
              "Service": "database",
              "StartLine": 109
            },
            "Description": "Postgresql can generate logs for checkpoints to improve visibility for audit and configuration issue resolution.",
            "ID": "AVD-AZU-0024",
            "Layer": {},
            "Message": "Database server is not configured to log checkpoints.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0024",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging",
              "https://avd.aquasec.com/misconfig/avd-azu-0024"
            ],
            "Resolution": "Enable checkpoint logging",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_sql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"ariel\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"Aa12345678\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    environment = var.environment",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Azure",
              "Resource": "azurerm_sql_server.example",
              "Service": "database",
              "StartLine": 9
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mysql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                = \"terragoat-mysql-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location            = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 46,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 47,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 48,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"terragoat-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 49,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = random_string.password.result",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 50,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 51,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name   = \"B_Gen5_2\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 52,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 53,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 71,
              "Provider": "Azure",
              "Resource": "azurerm_mysql_server.example",
              "Service": "database",
              "StartLine": 44
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0026",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_postgresql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 73,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-postgresql-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 74,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 75,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 76,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  sku_name                     = \"B_Gen5_2\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 77,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_mb                   = 5120",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 78,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  backup_retention_days        = 7",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 79,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  geo_redundant_backup_enabled = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 80,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  auto_grow_enabled            = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 81,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 82,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 96,
              "Provider": "Azure",
              "Resource": "azurerm_postgresql_server.example",
              "Service": "database",
              "StartLine": 73
            },
            "Description": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
            "ID": "AVD-AZU-0026",
            "Layer": {},
            "Message": "Database server does not require a secure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0026",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0026"
            ],
            "Resolution": "Use the most modern TLS policies available",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Databases should have the minimum TLS set for connections",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_sql_server\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                         = \"terragoat-sqlserver-${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name          = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                     = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  version                      = \"12.0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login          = \"ariel\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  administrator_login_password = \"Aa12345678\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  tags = merge({",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    environment = var.environment",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Azure",
              "Resource": "azurerm_sql_server.example",
              "Service": "database",
              "StartLine": 9
            },
            "Description": "Auditing helps you maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
            "ID": "AVD-AZU-0027",
            "Layer": {},
            "Message": "Server does not have an extended audit policy configured.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0027",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview",
              "https://avd.aquasec.com/misconfig/avd-azu-0027"
            ],
            "Resolution": "Enable auditing on Azure SQL databases",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Auditing should be enabled on Azure SQL Databases",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0028",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_mssql_server_security_alert_policy\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name        = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  server_name                = azurerm_sql_server.example.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  state                      = \"Enabled\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 35,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_access_key = azurerm_storage_account.example.primary_access_key",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  disabled_alerts = [",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Sql_Injection\",",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    \"Data_Exfiltration\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 40,
              "Provider": "Azure",
              "Resource": "azurerm_mssql_server_security_alert_policy.example",
              "Service": "database",
              "StartLine": 37
            },
            "Description": "SQL Server can alert for security issues including SQL Injection, vulnerabilities, access anomalies and data exfiltration. Ensure none of these are disabled to benefit from the best protection",
            "ID": "AVD-AZU-0028",
            "Layer": {},
            "Message": "Server has a security alert policy which disables alerts.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0028",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-azu-0028"
            ],
            "Resolution": "Use all provided threat alerts",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "No threat detections are set",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "azure/sql.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 3,
          "Successes": 2
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-AZU-0010",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_storage_account_network_rules\" \"test\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 62,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name  = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 63,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  storage_account_name = azurerm_storage_account.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 64,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 65,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  default_action = \"Deny\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 66,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ip_rules       = [\"127.0.0.1\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 67,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bypass         = [\"Metrics\"]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 68,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 69,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 69,
              "Provider": "Azure",
              "Resource": "azurerm_storage_account_network_rules.test",
              "Service": "storage",
              "StartLine": 62
            },
            "Description": "Some Microsoft services that interact with storage accounts operate from networks that can't be granted access through network rules. \n\nTo help this type of service work as intended, allow the set of trusted Microsoft services to bypass the network rules",
            "ID": "AVD-AZU-0010",
            "Layer": {},
            "Message": "Network rules do not allow bypass for Microsoft Services.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0010",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/storage/common/storage-network-security#trusted-microsoft-services",
              "https://avd.aquasec.com/misconfig/avd-azu-0010"
            ],
            "Resolution": "Allow Trusted Microsoft Services to bypass",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Trusted Microsoft Services should have bypass access to Storage accounts",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0011",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_storage_account\" \"example\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name                     = \"tgsa${var.environment}${random_integer.rnd_int.result}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  resource_group_name      = azurerm_resource_group.example.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location                 = azurerm_resource_group.example.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_tier             = \"Standard\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  account_replication_type = \"GRS\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  queue_properties {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    logging {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      delete                = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 31,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 32,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 60,
              "Provider": "Azure",
              "Resource": "azurerm_storage_account.example",
              "Service": "storage",
              "StartLine": 23
            },
            "Description": "Azure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. \n\nAzure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility.\n\nThis check will warn if the minimum TLS is not set to TLS1_2.",
            "ID": "AVD-AZU-0011",
            "Layer": {},
            "Message": "Storage account uses an insecure TLS version.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0011",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version",
              "https://avd.aquasec.com/misconfig/avd-azu-0011"
            ],
            "Resolution": "Use a more recent TLS/SSL policy for the load balancer",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "The minimum TLS version for Storage Accounts should be TLS1_2",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-AZU-0038",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"azurerm_managed_disk\" \"example\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "    enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 9,
              "Provider": "Azure",
              "Resource": "azurerm_managed_disk.example",
              "Service": "compute",
              "StartLine": 9
            },
            "Description": "Manage disks should be encrypted at rest. When specifying the \u003ccode\u003eencryption_settings\u003c/code\u003e block, the enabled attribute should be set to \u003ccode\u003etrue\u003c/code\u003e.",
            "ID": "AVD-AZU-0038",
            "Layer": {},
            "Message": "Managed disk is not encrypted.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-azu-0038",
            "Query": "data..",
            "References": [
              "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disk-encryption",
              "https://avd.aquasec.com/misconfig/avd-azu-0038"
            ],
            "Resolution": "Enable encryption on managed disks",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Enable disk encryption on managed disk",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "azure/storage.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 0,
          "Successes": 2
        },
        "Target": "gcp",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 10,
          "Successes": 2
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-GCP-0014",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Temporary files are not logged by default. To log all temporary files, a value of `0` should set in the `log_temp_files` flag - as all files greater in size than the number of bytes set in this flag will be logged.",
            "ID": "AVD-GCP-0014",
            "Layer": {},
            "Message": "Database instance has temporary file logging disabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0014",
            "Query": "data..",
            "References": [
              "https://postgresqlco.nf/doc/en/param/log_temp_files/",
              "https://avd.aquasec.com/misconfig/avd-gcp-0014"
            ],
            "Resolution": "Enable temporary file logging for all files",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Temporary file logging should be enabled for all temporary files.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0015",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      authorized_networks {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        name  = \"WWW\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "        value = \"0.0.0.0/0\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 14,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 8
            },
            "Description": "In-transit data should be encrypted so that if traffic is intercepted data will not be exposed in plaintext to attackers.",
            "ID": "AVD-GCP-0015",
            "Layer": {},
            "Message": "Database instance does not require TLS for all connections.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0015",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/sql/docs/mysql/configure-ssl-instance",
              "https://avd.aquasec.com/misconfig/avd-gcp-0015"
            ],
            "Resolution": "Enforce SSL for all connections",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "SSL connections to a SQL database instance should be enforced.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0016",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Logging connections provides useful diagnostic data such as session length, which can identify performance issues in an application and potential DoS vectors.",
            "ID": "AVD-GCP-0016",
            "Layer": {},
            "Message": "Database instance is not configured to log connections.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0016",
            "Query": "data..",
            "References": [
              "https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-CONNECTIONS",
              "https://avd.aquasec.com/misconfig/avd-gcp-0016"
            ],
            "Resolution": "Enable connection logging.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that logging of connections is enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0017",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 9,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 9
            },
            "Description": "Database instances should be configured so that they are not available over the public internet, but to internal compute resources which access them.",
            "ID": "AVD-GCP-0017",
            "Layer": {},
            "Message": "Database instance is granted a public internet address.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0017",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html",
              "https://avd.aquasec.com/misconfig/avd-gcp-0017"
            ],
            "Resolution": "Remove public access from database instances",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Ensure that Cloud SQL Database Instances are not publicly exposed",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0017",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"0.0.0.0/0\"",
                    "Content": "        value = \"0.0.0.0/0\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 12,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 12
            },
            "Description": "Database instances should be configured so that they are not available over the public internet, but to internal compute resources which access them.",
            "ID": "AVD-GCP-0017",
            "Layer": {},
            "Message": "Database instance allows access from the public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0017",
            "Query": "data..",
            "References": [
              "https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html",
              "https://avd.aquasec.com/misconfig/avd-gcp-0017"
            ],
            "Resolution": "Remove public access from database instances",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Ensure that Cloud SQL Database Instances are not publicly exposed",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0020",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Lock waits are often an indication of poor performance and often an indicator of a potential denial of service vulnerability, therefore occurrences should be logged for analysis.",
            "ID": "AVD-GCP-0020",
            "Layer": {},
            "Message": "Database instance is not configured to log lock waits.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0020",
            "Query": "data..",
            "References": [
              "https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-LOCK-WAITS",
              "https://avd.aquasec.com/misconfig/avd-gcp-0020"
            ],
            "Resolution": "Enable lock wait logging.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that logging of lock waits is enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0022",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Logging disconnections provides useful diagnostic data such as session length, which can identify performance issues in an application and potential DoS vectors.",
            "ID": "AVD-GCP-0022",
            "Layer": {},
            "Message": "Database instance is not configured to log disconnections.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0022",
            "Query": "data..",
            "References": [
              "https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-DISCONNECTIONS",
              "https://avd.aquasec.com/misconfig/avd-gcp-0022"
            ],
            "Resolution": "Enable disconnection logging.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that logging of disconnections is enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0024",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "      enabled = false",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 16,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 16,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 16
            },
            "Description": "Automated backups are not enabled by default. Backups are an easy way to restore data in a corruption or data-loss scenario.",
            "ID": "AVD-GCP-0024",
            "Layer": {},
            "Message": "Database instance does not have backups enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0024",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/sql/docs/mysql/backup-recovery/backups",
              "https://avd.aquasec.com/misconfig/avd-gcp-0024"
            ],
            "Resolution": "Enable automated backups",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Enable automated backups to recover from data-loss",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0025",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_sql_database_instance\" \"master_instance\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name             = \"terragoat-${var.environment}-master\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  database_version = \"POSTGRES_11\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  settings {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    tier = \"db-f1-micro\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_configuration {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      ipv4_enabled = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_sql_database_instance.master_instance",
              "Service": "sql",
              "StartLine": 1
            },
            "Description": "Logging checkpoints provides useful diagnostic data, which can identify performance issues in an application and potential DoS vectors.",
            "ID": "AVD-GCP-0025",
            "Layer": {},
            "Message": "Database instance is not configured to log checkpoints.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0025",
            "Query": "data..",
            "References": [
              "https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-CHECKPOINTS",
              "https://avd.aquasec.com/misconfig/avd-gcp-0025"
            ],
            "Resolution": "Enable checkpoints logging.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that logging of checkpoints is enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0046",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_bigquery_dataset\" \"dataset\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"allAuthenticatedUsers\"",
                    "Content": "    special_group = \"allAuthenticatedUsers\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 24,
              "Provider": "Google",
              "Resource": "google_bigquery_dataset.dataset",
              "Service": "bigquery",
              "StartLine": 24
            },
            "Description": "Using 'allAuthenticatedUsers' provides any GCP user - even those outside of your organisation - access to your BigQuery dataset.",
            "ID": "AVD-GCP-0046",
            "Layer": {},
            "Message": "Dataset grants access to all authenticated GCP users.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0046",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0046"
            ],
            "Resolution": "Configure access permissions with higher granularity",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "BigQuery datasets should only be accessible within the organisation",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "gcp/big_data.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 3,
          "Successes": 3
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-GCP-0001",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_storage_bucket_iam_binding\" \"allow_public_read\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  bucket  = google_storage_bucket.terragoat_website.id",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 18,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  members = [\"allUsers\"]",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  role    = \"roles/storage.objectViewer\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_storage_bucket_iam_binding.allow_public_read",
              "Service": "storage",
              "StartLine": 19
            },
            "Description": "Using 'allUsers' or 'allAuthenticatedUsers' as members in an IAM member/binding causes data to be exposed outside of the organisation.",
            "ID": "AVD-GCP-0001",
            "Layer": {},
            "Message": "Bucket allows public access.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0001",
            "Query": "data..",
            "References": [
              "https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b",
              "https://avd.aquasec.com/misconfig/avd-gcp-0001"
            ],
            "Resolution": "Restrict public access to the bucket.",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0002",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_storage_bucket\" \"terragoat_website\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name          = \"terragot-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location      = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  labels = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform__gcp__gcs_tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2022-01-19-17-02-27\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"jameswoolfenden\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 15,
              "Provider": "Google",
              "Resource": "google_storage_bucket.terragoat_website",
              "Service": "storage",
              "StartLine": 1
            },
            "Description": "When you enable uniform bucket-level access on a bucket, Access Control Lists (ACLs) are disabled, and only bucket-level Identity and Access Management (IAM) permissions grant access to that bucket and the objects it contains. You revoke all access granted by object ACLs and the ability to administrate permissions using bucket ACLs.",
            "ID": "AVD-GCP-0002",
            "Layer": {},
            "Message": "Bucket has uniform bucket level access disabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0002",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/storage/docs/uniform-bucket-level-access",
              "https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b",
              "https://avd.aquasec.com/misconfig/avd-gcp-0002"
            ],
            "Resolution": "Enable uniform bucket level access to provide a uniform permissioning system.",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0066",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_storage_bucket\" \"terragoat_website\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 1,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name          = \"terragot-${var.environment}\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 2,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location      = var.location",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  force_destroy = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  labels = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform__gcp__gcs_tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2022-01-19-17-02-27\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"jameswoolfenden\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 15,
              "Provider": "Google",
              "Resource": "google_storage_bucket.terragoat_website",
              "Service": "storage",
              "StartLine": 1
            },
            "Description": "Using unmanaged keys makes rotation and general management difficult.",
            "ID": "AVD-GCP-0066",
            "Layer": {},
            "Message": "Storage bucket encryption does not use a customer-managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0066",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/storage/docs/encryption/customer-managed-keys",
              "https://avd.aquasec.com/misconfig/avd-gcp-0066"
            ],
            "Resolution": "Encrypt Cloud Storage buckets using customer-managed keys.",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Cloud Storage buckets should be encrypted with a customer-managed key.",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "gcp/gcs.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 17,
          "Successes": 4
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-GCP-0047",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "By default, Pods in Kubernetes can operate with capabilities beyond what they require. You should constrain the Pod's capabilities to only those required for that workload.\n\nKubernetes offers controls for restricting your Pods to execute with only explicitly granted capabilities. \n\nPod Security Policy allows you to set smart defaults for your Pods, and enforce controls you want to enable across your fleet. \n\nThe policies you define should be specific to the needs of your application",
            "ID": "AVD-GCP-0047",
            "Layer": {},
            "Message": "Cluster pod security policy is not enforced.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0047",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers",
              "https://avd.aquasec.com/misconfig/avd-gcp-0047"
            ],
            "Resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Pod security policy enforcement not defined.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0048",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 30,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 28
            },
            "Description": "The Compute Engine instance metadata server exposes legacy v0.1 and v1beta1 endpoints, which do not enforce metadata query headers. \n\nThis is a feature in the v1 APIs that makes it more difficult for a potential attacker to retrieve instance metadata. \n\nUnless specifically required, we recommend you disable these legacy APIs.\n\nWhen setting the \u003ccode\u003emetadata\u003c/code\u003e block, the default value for \u003ccode\u003edisable-legacy-endpoints\u003c/code\u003e is set to true, they should not be explicitly enabled.",
            "ID": "AVD-GCP-0048",
            "Layer": {},
            "Message": "Cluster has legacy metadata endpoints enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0048",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#protect_node_metadata_default_for_112",
              "https://avd.aquasec.com/misconfig/avd-gcp-0048"
            ],
            "Resolution": "Disable legacy metadata endpoints",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Legacy metadata endpoints enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0049",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "IP aliasing allows the reuse of public IPs internally, removing the need for a NAT gateway.",
            "ID": "AVD-GCP-0049",
            "Layer": {},
            "Message": "Cluster has IP aliasing disabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0049",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0049"
            ],
            "Resolution": "Enable IP aliasing",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Clusters should have IP aliasing enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0050",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 30,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 28
            },
            "Description": "You should create and use a minimally privileged service account to run your GKE cluster instead of using the Compute Engine default service account.",
            "ID": "AVD-GCP-0050",
            "Layer": {},
            "Message": "Node pool does not override the default service account.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0050",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa",
              "https://avd.aquasec.com/misconfig/avd-gcp-0050"
            ],
            "Resolution": "Use limited permissions for service accounts to be effective",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Checks for service account defined for GKE nodes",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0051",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "Labels make it easier to manage assets and differentiate between clusters and environments, allowing the mapping of computational resources to the wider organisational structure.",
            "ID": "AVD-GCP-0051",
            "Layer": {},
            "Message": "Cluster does not use GCE resource labels.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0051",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0051"
            ],
            "Resolution": "Set cluster resource labels",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Clusters should be configured with Labels",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0052",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"none\"",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 13,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 13
            },
            "Description": "StackDriver monitoring aggregates logs, events, and metrics from your Kubernetes environment on GKE to help you understand your application's behavior in production.",
            "ID": "AVD-GCP-0052",
            "Layer": {},
            "Message": "Cluster does not use the monitoring.googleapis.com/kubernetes StackDriver monitoring service.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0052",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0052"
            ],
            "Resolution": "Enable StackDriver monitoring",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Stackdriver Monitoring should be enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0053",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "      cidr_block = \"0.0.0.0/0\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 19,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 19
            },
            "Description": "The GKE control plane is exposed to the public internet by default.",
            "ID": "AVD-GCP-0053",
            "Layer": {},
            "Message": "Cluster exposes control plane to the public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0053",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0053"
            ],
            "Resolution": "Use private nodes and master authorised networks to prevent exposure",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "GKE Control Plane should not be publicly accessible",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0054",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "\"Ubuntu\"",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 29
            },
            "Description": "GKE supports several OS image types but COS is the recommended OS image to use on cluster nodes for enhanced security",
            "ID": "AVD-GCP-0054",
            "Layer": {},
            "Message": "Cluster is not configuring node pools to use the COS containerd image type by default.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0054",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0054"
            ],
            "Resolution": "Use the COS image type",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0054",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "\"Ubuntu\"",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 29,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 29
            },
            "Description": "GKE supports several OS image types but COS is the recommended OS image to use on cluster nodes for enhanced security",
            "ID": "AVD-GCP-0054",
            "Layer": {},
            "Message": "Node pool is not using the COS containerd image type.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0054",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0054"
            ],
            "Resolution": "Use the COS image type",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0056",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "Enabling a network policy allows the segregation of network traffic by namespace",
            "ID": "AVD-GCP-0056",
            "Layer": {},
            "Message": "Cluster does not have a network policy enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0056",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0056"
            ],
            "Resolution": "Enable network policy",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Network Policy should be enabled on GKE clusters",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 30,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 28
            },
            "Description": "If the \u003ccode\u003eworkload_metadata_config\u003c/code\u003e block within \u003ccode\u003enode_config\u003c/code\u003e is included, the \u003ccode\u003enode_metadata\u003c/code\u003e attribute should be configured securely.\n\nThe attribute should be set to \u003ccode\u003eSECURE\u003c/code\u003e to use metadata concealment, or \u003ccode\u003eGKE_METADATA_SERVER\u003c/code\u003e if workload identity is enabled. This ensures that the VM metadata is not unnecessarily exposed to pods.",
            "ID": "AVD-GCP-0057",
            "Layer": {},
            "Message": "Cluster exposes node metadata of pools by default.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0057",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/protecting-cluster-metadata#create-concealed",
              "https://avd.aquasec.com/misconfig/avd-gcp-0057"
            ],
            "Resolution": "Set node metadata to SECURE or GKE_METADATA_SERVER",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Node metadata value disables metadata concealment.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0057",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 30,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 28
            },
            "Description": "If the \u003ccode\u003eworkload_metadata_config\u003c/code\u003e block within \u003ccode\u003enode_config\u003c/code\u003e is included, the \u003ccode\u003enode_metadata\u003c/code\u003e attribute should be configured securely.\n\nThe attribute should be set to \u003ccode\u003eSECURE\u003c/code\u003e to use metadata concealment, or \u003ccode\u003eGKE_METADATA_SERVER\u003c/code\u003e if workload identity is enabled. This ensures that the VM metadata is not unnecessarily exposed to pods.",
            "ID": "AVD-GCP-0057",
            "Layer": {},
            "Message": "Node pool exposes node metadata.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0057",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/protecting-cluster-metadata#create-concealed",
              "https://avd.aquasec.com/misconfig/avd-gcp-0057"
            ],
            "Resolution": "Set node metadata to SECURE or GKE_METADATA_SERVER",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Node metadata value disables metadata concealment.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0058",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 31,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 24
            },
            "Description": "Automatic updates keep nodes updated with the latest cluster master version.",
            "ID": "AVD-GCP-0058",
            "Layer": {},
            "Message": "Node pool does not have auto-upgraade enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0058",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0058"
            ],
            "Resolution": "Enable automatic upgrades",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Kubernetes should have 'Automatic upgrade' enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0059",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name               = \"terragoat-${var.environment}-cluster\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location           = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  initial_node_count = 1",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  monitoring_service       = \"none\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  remove_default_node_pool = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 15,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 6
            },
            "Description": "Enabling private nodes on a cluster ensures the nodes are only available internally as they will only be assigned internal addresses.",
            "ID": "AVD-GCP-0059",
            "Layer": {},
            "Message": "Cluster does not have private nodes.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0059",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0059"
            ],
            "Resolution": "Enable private cluster",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Clusters should be set to private",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0060",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": true
                  },
                  {
                    "Annotation": "\"none\"",
                    "Content": "  logging_service    = \"none\"",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 8,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 8
            },
            "Description": "StackDriver logging provides a useful interface to all of stdout/stderr for each container and should be enabled for moitoring, debugging, etc.",
            "ID": "AVD-GCP-0060",
            "Layer": {},
            "Message": "Cluster does not use the logging.googleapis.com/kubernetes StackDriver logging service.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0060",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0060"
            ],
            "Resolution": "Enable StackDriver logging",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Stackdriver Logging should be enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0062",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_cluster\" \"workload_cluster\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  enable_legacy_abac       = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 12,
              "Provider": "Google",
              "Resource": "google_container_cluster.workload_cluster",
              "Service": "gke",
              "StartLine": 12
            },
            "Description": "You should disable Attribute-Based Access Control (ABAC), and instead use Role-Based Access Control (RBAC) in GKE.\n\nRBAC has significant security advantages and is now stable in Kubernetes, so it’s time to disable ABAC.",
            "ID": "AVD-GCP-0062",
            "Layer": {},
            "Message": "Cluster has legacy ABAC enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0062",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#leave_abac_disabled_default_for_110",
              "https://avd.aquasec.com/misconfig/avd-gcp-0062"
            ],
            "Resolution": "Switch to using RBAC permissions",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Legacy ABAC permissions are enabled.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0063",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_container_node_pool\" \"custom_node_pool\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  cluster  = google_container_cluster.workload_cluster.name",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  location = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  node_config {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 28,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    image_type = \"Ubuntu\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 29,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 30,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 31,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 31,
              "Provider": "Google",
              "Resource": "google_container_node_pool.custom_node_pool",
              "Service": "gke",
              "StartLine": 24
            },
            "Description": "Automatic repair will monitor nodes and attempt repair when a node fails multiple subsequent health checks",
            "ID": "AVD-GCP-0063",
            "Layer": {},
            "Message": "Node pool does not have auto-repair enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0063",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0063"
            ],
            "Resolution": "Enable automatic repair",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Kubernetes should have 'Automatic repair' enabled",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "gcp/gke.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 9,
          "Successes": 2
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-GCP-0030",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  metadata = {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    block-project-ssh-keys = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enable-oslogin         = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    serial-port-enable     = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 23,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 19
            },
            "Description": "Use of project-wide SSH keys means that a compromise of any one of these key pairs can result in all instances being compromised. It is recommended to use instance-level keys.",
            "ID": "AVD-GCP-0030",
            "Layer": {},
            "Message": "Instance allows use of project-level SSH keys.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0030",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0030"
            ],
            "Resolution": "Disable project-wide SSH keys",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Disable project-wide SSH keys for all instances",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0031",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "    access_config {}",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 15,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 15
            },
            "Description": "Instances should not be publicly exposed to the internet",
            "ID": "AVD-GCP-0031",
            "Layer": {},
            "Message": "Instance has a public IP allocated.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0031",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/compute/docs/ip-addresses#externaladdresses",
              "https://avd.aquasec.com/misconfig/avd-gcp-0031"
            ],
            "Resolution": "Remove public IP",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances should not have public IP addresses",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0032",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  metadata = {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    block-project-ssh-keys = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enable-oslogin         = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    serial-port-enable     = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 23,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 19
            },
            "Description": "When serial port access is enabled, the access is not governed by network security rules meaning the port can be exposed publicly.",
            "ID": "AVD-GCP-0032",
            "Layer": {},
            "Message": "Instance has serial port enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0032",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0032"
            ],
            "Resolution": "Disable serial port access",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Disable serial port connectivity for all instances",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0033",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "  boot_disk {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    initialize_params {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      image = \"debian-cloud/debian-9\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    auto_delete = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 12,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 7
            },
            "Description": "Using unmanaged keys makes rotation and general management difficult.",
            "ID": "AVD-GCP-0033",
            "Layer": {},
            "Message": "Instance disk encryption does not use a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0033",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0033"
            ],
            "Resolution": "Use managed keys ",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "VM disks should be encrypted with Customer Supplied Encryption Keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0034",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_disk\" \"unencrypted_disk\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 36,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name = \"terragoat-${var.environment}-disk\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 37,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  labels = {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 38,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_commit           = \"2bdc0871a5f4505be58244029cc6485d45d7bb8e\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 39,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_file             = \"terraform__gcp__instances_tf\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 40,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_at = \"2022-01-19-17-02-27\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 41,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_last_modified_by = \"jameswoolfenden\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 42,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_modifiers        = \"jameswoolfenden__nimrodkor\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 43,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    git_org              = \"bridgecrewio\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 44,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 45,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 48,
              "Provider": "Google",
              "Resource": "google_compute_disk.unencrypted_disk",
              "Service": "compute",
              "StartLine": 36
            },
            "Description": "Using unmanaged keys makes rotation and general management difficult.",
            "ID": "AVD-GCP-0034",
            "Layer": {},
            "Message": "Disk is not encrypted with a customer managed key.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0034",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0034"
            ],
            "Resolution": "Use managed keys to encrypt disks.",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "Disks should be encrypted with customer managed encryption keys",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0036",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "false",
                    "Content": "  metadata = {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    block-project-ssh-keys = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    enable-oslogin         = false",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    serial-port-enable     = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 23,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 19
            },
            "Description": "OS Login automatically revokes the relevant SSH keys when an IAM user has their access revoked.",
            "ID": "AVD-GCP-0036",
            "Layer": {},
            "Message": "Instance has OS Login disabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0036",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0036"
            ],
            "Resolution": "Enable OS Login at project level and remove instance-level overrides",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Instances should not override the project setting for OS Login",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0041",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  machine_type = \"n1-standard-1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-${var.environment}-machine\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  zone         = data.google_compute_zones.zones.names[0]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  boot_disk {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    initialize_params {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      image = \"debian-cloud/debian-9\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    auto_delete = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 34,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 3
            },
            "Description": "The virtual TPM provides numerous security measures to your VM.",
            "ID": "AVD-GCP-0041",
            "Layer": {},
            "Message": "Instance does not have VTPM for shielded VMs enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0041",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/blog/products/identity-security/virtual-trusted-platform-module-for-shielded-vms-security-in-plaintext",
              "https://avd.aquasec.com/misconfig/avd-gcp-0041"
            ],
            "Resolution": "Enable Shielded VM VTPM",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Instances should have Shielded VM VTPM enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0043",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": true
                  },
                  {
                    "Annotation": "true",
                    "Content": "  can_ip_forward = true",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 17,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 33,
                    "Truncated": true
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 34,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 17,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 17
            },
            "Description": "Disabling IP forwarding ensures the instance can only receive packets addressed to the instance and can only send packets with a source address of the instance.",
            "ID": "AVD-GCP-0043",
            "Layer": {},
            "Message": "Instance has IP forwarding allowed.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0043",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0043"
            ],
            "Resolution": "Disable IP forwarding",
            "Severity": "HIGH",
            "Status": "FAIL",
            "Title": "Instances should not have IP forwarding enabled",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0045",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_instance\" \"server\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 3,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  machine_type = \"n1-standard-1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 4,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name         = \"terragoat-${var.environment}-machine\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 5,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  zone         = data.google_compute_zones.zones.names[0]",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 6,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  boot_disk {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    initialize_params {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "      image = \"debian-cloud/debian-9\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    }",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    auto_delete = true",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 34,
              "Provider": "Google",
              "Resource": "google_compute_instance.server",
              "Service": "compute",
              "StartLine": 3
            },
            "Description": "Integrity monitoring helps you understand and make decisions about the state of your VM instances.",
            "ID": "AVD-GCP-0045",
            "Layer": {},
            "Message": "Instance does not have shielded VM integrity monitoring enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0045",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/security/shielded-cloud/shielded-vm#integrity-monitoring",
              "https://avd.aquasec.com/misconfig/avd-gcp-0045"
            ],
            "Resolution": "Enable Shielded VM Integrity Monitoring",
            "Severity": "MEDIUM",
            "Status": "FAIL",
            "Title": "Instances should have Shielded VM integrity monitoring enabled",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "gcp/instances.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 2,
          "Successes": 0
        },
        "Misconfigurations": [
          {
            "AVDID": "AVD-GCP-0027",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_firewall\" \"allow_all\" {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 19,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name          = \"terragoat-${var.environment}-firewall\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 20,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  network       = google_compute_network.vpc.id",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 21,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  source_ranges = [\"0.0.0.0/0\"]",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 22,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  allow {",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 23,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    protocol = \"tcp\"",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 24,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ports    = [\"0-65535\"]",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 25,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  }",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 26,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "}",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 27,
                    "Truncated": false
                  }
                ]
              },
              "EndLine": 22,
              "Provider": "Google",
              "Resource": "google_compute_firewall.allow_all",
              "Service": "compute",
              "StartLine": 22
            },
            "Description": "Network security rules should not use very broad subnets.\n\nWhere possible, segments should be broken into smaller subnets and avoid using the \u003ccode\u003e/0\u003c/code\u003e subnet.",
            "ID": "AVD-GCP-0027",
            "Layer": {},
            "Message": "Firewall rule allows ingress traffic from multiple addresses on the public internet.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0027",
            "Query": "data..",
            "References": [
              "https://cloud.google.com/vpc/docs/using-firewalls",
              "https://avd.aquasec.com/misconfig/avd-gcp-0027"
            ],
            "Resolution": "Set a more restrictive cidr range",
            "Severity": "CRITICAL",
            "Status": "FAIL",
            "Title": "An inbound firewall rule allows traffic from /0.",
            "Type": "Terraform Security Check"
          },
          {
            "AVDID": "AVD-GCP-0029",
            "CauseMetadata": {
              "Code": {
                "Lines": [
                  {
                    "Annotation": "",
                    "Content": "resource \"google_compute_subnetwork\" \"public-subnetwork\" {",
                    "FirstCause": true,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 7,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  name          = \"terragoat-${var.environment}-public-subnetwork\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 8,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  ip_cidr_range = \"10.0.0.0/24\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 9,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  region        = var.region",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 10,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  network       = google_compute_network.vpc.id",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 11,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 12,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "  secondary_ip_range {",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 13,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    range_name    = \"tf-test-secondary-range-update1\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": false,
                    "Number": 14,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "    ip_cidr_range = \"192.168.10.0/24\"",
                    "FirstCause": false,
                    "IsCause": true,
                    "LastCause": true,
                    "Number": 15,
                    "Truncated": false
                  },
                  {
                    "Annotation": "",
                    "Content": "",
                    "FirstCause": false,
                    "IsCause": false,
                    "LastCause": false,
                    "Number": 16,
                    "Truncated": true
                  }
                ]
              },
              "EndLine": 17,
              "Provider": "Google",
              "Resource": "google_compute_subnetwork.public-subnetwork",
              "Service": "compute",
              "StartLine": 7
            },
            "Description": "VPC flow logs record information about all traffic, which is a vital tool in reviewing anomalous traffic.",
            "ID": "AVD-GCP-0029",
            "Layer": {},
            "Message": "Subnetwork does not have VPC flow logs enabled.",
            "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-gcp-0029",
            "Query": "data..",
            "References": [
              "https://avd.aquasec.com/misconfig/avd-gcp-0029"
            ],
            "Resolution": "Enable VPC flow logs",
            "Severity": "LOW",
            "Status": "FAIL",
            "Title": "VPC flow logs should be enabled for all subnetworks",
            "Type": "Terraform Security Check"
          }
        ],
        "Target": "gcp/networks.tf",
        "Type": "terraform"
      },
      {
        "Class": "config",
        "MisconfSummary": {
          "Exceptions": 0,
          "Failures": 0,
          "Successes": 2
        },
        "Target": "oracle",
        "Type": "terraform"
      }
    ],
    "SchemaVersion": 2
  },
  "policy-results": [
    {
      "filename": "root",
      "namespace": "main",
      "successes": 0,
      "failures": [
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: aws/db-app.tf: A database resource is marked as publicly accessible."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: aws/db-app.tf: An egress security group rule allows traffic to /0."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: aws/ec2.tf: An egress security group rule allows traffic to /0."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: aws/ec2.tf: An ingress security group rule allows traffic from /0."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: aws/ec2.tf: User data for EC2 instances must not contain sensitive AWS keys"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: aws/eks.tf: EKS Clusters should have the public access disabled"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: aws/eks.tf: EKS cluster should not have open CIDR range for public access"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: aws/es.tf: Elasticsearch doesn't enforce HTTPS traffic."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: azure/aks.tf: Ensure AKS has an API Server Authorized IP Ranges enabled"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: azure/key_vault.tf: Key vault should have the network acl block specified"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: azure/mssql.tf: The minimum TLS version for Storage Accounts should be TLS1_2"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: azure/networking.tf: An inbound network security rule allows traffic from /0."
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: azure/networking.tf: RDP access should not be accessible from the Internet, should be blocked on port 3389"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: azure/networking.tf: SSH access should not be accessible from the Internet, should be blocked on port 22"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: azure/storage.tf: The minimum TLS version for Storage Accounts should be TLS1_2"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: gcp/big_data.tf: BigQuery datasets should only be accessible within the organisation"
        },
        {
          "msg": "config.rego failed - Found CRITICAL issues in infrastructure as code: gcp/networks.tf: An inbound firewall rule allows traffic from /0."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/db-app.tf: IAM policy should avoid use of wildcards and instead apply the principle of least privilege"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/db-app.tf: Instance with unencrypted block device."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/db-app.tf: RDS encryption has not been enabled at a DB Instance level."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/db-app.tf: aws_instance should activate session tokens for Instance Metadata Service."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ec2.tf: EBS volumes must be encrypted"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ec2.tf: Instance with unencrypted block device."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ec2.tf: Instances in a subnet should not receive a public IP address by default."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ec2.tf: S3 Access Block should Ignore Public Acl"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ec2.tf: S3 Access block should block public ACL"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ec2.tf: S3 Access block should block public policy"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ec2.tf: S3 Access block should restrict public bucket to limit access"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ec2.tf: S3 encryption should use Customer Managed Keys"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ec2.tf: Unencrypted S3 bucket."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ec2.tf: aws_instance should activate session tokens for Instance Metadata Service."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ecr.tf: ECR images tags shouldn't be mutable."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/ecr.tf: ECR repository has image scans disabled."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/eks.tf: EKS should have the encryption of secrets enabled"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/eks.tf: Instances in a subnet should not receive a public IP address by default."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/elb.tf: Load balancer is exposed to the internet."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/es.tf: Elasticsearch domain endpoint is using outdated TLS policy."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/es.tf: Elasticsearch domain isn't encrypted at rest."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/es.tf: Elasticsearch domain uses plaintext traffic for node to node communication."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/iam.tf: IAM policy should avoid use of wildcards and instead apply the principle of least privilege"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/neptune.tf: Neptune encryption should use Customer Managed Keys"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/neptune.tf: Neptune storage must be encrypted at rest"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/rds.tf: There is no encryption specified or encryption is disabled on the RDS Cluster."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/resources/Dockerfile: Image user should not be 'root'"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/s3.tf: S3 Access Block should Ignore Public Acl"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/s3.tf: S3 Access block should block public ACL"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/s3.tf: S3 Access block should block public policy"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/s3.tf: S3 Access block should restrict public bucket to limit access"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/s3.tf: S3 encryption should use Customer Managed Keys"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: aws/s3.tf: Unencrypted S3 bucket."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: azure/aks.tf: Ensure AKS cluster has Network Policy configured"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: azure/aks.tf: Ensure RBAC is enabled on AKS clusters"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: azure/app_service.tf: Web App uses latest TLS version"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: azure/instance.tf: Password authentication should be disabled on Azure virtual machines"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: azure/storage.tf: Enable disk encryption on managed disk"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: azure/storage.tf: Trusted Microsoft Services should have bypass access to Storage accounts"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: gcp/big_data.tf: Ensure that Cloud SQL Database Instances are not publicly exposed"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: gcp/big_data.tf: SSL connections to a SQL database instance should be enforced."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: gcp/gcs.tf: Ensure that Cloud Storage bucket is not anonymously or publicly accessible."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: gcp/gke.tf: GKE Control Plane should not be publicly accessible"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: gcp/gke.tf: Legacy ABAC permissions are enabled."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: gcp/gke.tf: Legacy metadata endpoints enabled."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: gcp/gke.tf: Node metadata value disables metadata concealment."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: gcp/gke.tf: Pod security policy enforcement not defined."
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: gcp/instances.tf: Instances should not have IP forwarding enabled"
        },
        {
          "msg": "config.rego failed - Found HIGH issues in infrastructure as code: gcp/instances.tf: Instances should not have public IP addresses"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: aws/ec2.tf: AWS Access Key ID"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: aws/ec2.tf: AWS Secret Access Key"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: aws/lambda.tf: AWS Access Key ID"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: aws/lambda.tf: AWS Secret Access Key"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: aws/providers.tf: AWS Access Key ID"
        },
        {
          "msg": "secret.rego failed - Found CRITICAL secret: aws/providers.tf: AWS Secret Access Key"
        }
      ]
    }
  ],
  "policy-passed": false
}