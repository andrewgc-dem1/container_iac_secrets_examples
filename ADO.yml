trigger:
- manual

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: SBOM
  displayName: SBOM generation - Veracode Continer / IaC / Secrets Scanner
  jobs:
  - job: SBOM
    steps:
    - task: Bash@3
      displayName: SBOM generation - Veracode Continer / IaC / Secrets Scanner
      inputs: 
        targetType: inline
        script: |
          pwd
          export VERACODE_API_KEY_ID=$(VERACODE_API_KEY_ID)
          export VERACODE_API_KEY_SECRET=$(VERACODE_API_KEY_SECRET)
          curl -fsS https://tools.veracode.com/veracode-cli/install | sh
          ./veracode configure
          ./veracode sbom --source https://github.com/veracode/verademo --type repo --format json --output ./sbom.json
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'sbom.json'
        pathToPublish: '$(System.DefaultWorkingDirectory)/sbom.json'
      displayName: 'Publish Veracode sbom.json Artifact'

- stage: Scan
  displayName: Scan - Veracode Continer / IaC / Secrets Scanner
  jobs:
    - job: SCAN
      steps:
      - task: Bash@3
        displayName: Scan - Veracode Continer / IaC / Secrets Scanner
        inputs:
          targetType: inline
          script: |
            pwd
            export VERACODE_API_KEY_ID=$(VERACODE_API_KEY_ID)
            export VERACODE_API_KEY_SECRET=$(VERACODE_API_KEY_SECRET)
            curl -fsS https://tools.veracode.com/veracode-cli/install | sh
            ./veracode configure
            ./veracode scan --source https://github.com/veracode/verademo --type repo --format json --output ./veracode_container_scan.json
      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: 'veracode_container_scan.json'
          pathToPublish: '$(System.DefaultWorkingDirectory)/veracode_container_scan.json'
        displayName: 'Publish veracode_container_scan.json Artifact'

      - task: Bash@3
        displayName: 'Policy check'
        inputs:
          targetType: 'inline'
          script: |
            PASS=$(cat veracode_container_scan.json | jq -r '."policy-passed"' )
            #PASS='passed'
            echo "Passed policy: $PASS"
            if [ $PASS == 'false' ]
            then
              exit 1
            else
              exit 0
            fi
